{
  "openapi": "3.1.0",
  "info": {
    "title": "Market Data API.",
    "description": "Documentation of the Market Data API.",
    "contact": {
      "name": "API Support",
      "email": "support@example.com"
    },
    "version": "1.0.0"
  },
  "jsonSchemaDialect": "https://json-schema.org/draft/2020-12/schema",
  "servers": [
    {
      "url": "https://api.go.useallmind.ai/",
      "variables": {}
    }
  ],
  "paths": {
    "/api-keys": {
      "get": {
        "tags": [
          "bigtable"
        ],
        "summary": "listAPIKeys",
        "description": "Retrieves all API keys associated with the specified user ID.",
        "operationId": "listAPIKeys",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "description": "The user ID to retrieve API keys for",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/APIKey"
                  },
                  "description": "",
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "bigtable"
        ],
        "summary": "createAPIKey",
        "description": "Creates a new API key with the specified name and permissions for the given user.",
        "operationId": "createAPIKey",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "The name of the API key",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "The user ID to create the API key for",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "permissions",
            "in": "query",
            "description": "The permissions to grant to the API key",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CreateAPIKeyResponse represents the response structure when creating a new API key. It contains the generated API key value and the timestamp when it was created.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKey"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api-keys/{key}": {
      "delete": {
        "tags": [
          "bigtable"
        ],
        "summary": "deleteAPIKey",
        "description": "Deletes the specified API key.",
        "operationId": "deleteAPIKey",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "The key of the API key to delete",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/bigtable/chat/{rowKey}": {
      "get": {
        "tags": [
          "bigtable"
        ],
        "summary": "getChatHistory",
        "description": "Retrieves the chat history for the specified row key from BigTable.",
        "operationId": "getChatHistory",
        "parameters": [
          {
            "name": "rowKey",
            "in": "path",
            "description": "The row key to get chat history from",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatHistory"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "bigtable"
        ],
        "summary": "createChat",
        "description": "Creates a new chat conversation with the specified messages at the given row key.",
        "operationId": "createChat",
        "parameters": [
          {
            "name": "rowKey",
            "in": "path",
            "description": "The row key to create the chat at",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatHistory"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "bigtable"
        ],
        "summary": "deleteChatKey",
        "description": "Removes the specified row from the chat table in BigTable.",
        "operationId": "deleteChatKey",
        "parameters": [
          {
            "name": "rowKey",
            "in": "path",
            "description": "The row key to delete from the chat table",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/current-price/{symbol}": {
      "get": {
        "tags": [
          "prices"
        ],
        "summary": "getLastTradePrice",
        "description": "This will retrieve the most recent trade data for the specified stock symbol including\ncurrent price, bid/ask prices, trade size, and other market data from Redis.",
        "operationId": "getLastTradePrice",
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentPrice"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/darkpool-trends": {
      "get": {
        "tags": [
          "prices"
        ],
        "summary": "getDarkpoolTrends",
        "description": "Retrieves the top K darkpool trends based on the provided count and start date.\nData is fetched from cache if available, otherwise from the primary service.",
        "operationId": "getDarkpoolTrends",
        "parameters": [
          {
            "name": "k",
            "in": "query",
            "description": "Number of darkpool trends to return.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "Start date for fetching trends (YYYY-MM-DD).",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DarkpoolTrend"
                  },
                  "description": "",
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/darkpool/daily/{ticker}": {
      "get": {
        "tags": [
          "prices"
        ],
        "summary": "getDailyDarkpoolTrend",
        "description": "Retrieves daily darkpool trend metrics for the specified ticker within the given date range.\nIf no dates are provided, defaults to the last 30 days.",
        "operationId": "getDailyDarkpoolTrend",
        "parameters": [
          {
            "name": "ticker",
            "in": "path",
            "description": "The ticker symbol to fetch trends for.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Start date for fetching trends (YYYY-MM-DD).",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "End date for fetching trends (YYYY-MM-DD).",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/futures-data": {
      "get": {
        "tags": [
          "prices"
        ],
        "summary": "getFuturesData",
        "description": "Retrieves futures data for a specified ticker symbol within a given date range.",
        "operationId": "getFuturesData",
        "parameters": [
          {
            "name": "ticker",
            "in": "query",
            "description": "Ticker symbol for the futures data.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "Start date for the data (YYYY-MM-DD).",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "End date for the data (YYYY-MM-DD).",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FuturesRowData"
                  },
                  "description": "",
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/historical-data/{ticker}": {
      "get": {
        "tags": [
          "prices"
        ],
        "summary": "getHistoricalData",
        "description": "This will retrieve historical price data for the specified stock symbol, aggregated by the given period,\nwithin the specified start and end dates.",
        "operationId": "getHistoricalData",
        "parameters": [
          {
            "name": "ticker",
            "in": "path",
            "description": "The stock symbol",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "query",
            "description": "The time period for aggregation (e.g., \"1m\", \"1h\", \"day\")",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "The start date for historical data (YYYY-MM-DD)",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "The end date for historical data (YYYY-MM-DD)",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/trades/{symbol}": {
      "get": {
        "tags": [
          "prices"
        ],
        "summary": "getTradesData",
        "description": "This will retrieve recent trades data for the specified stock symbol from Redis\nusing the TICKER_TRADES sorted set key pattern. Each trade is decompressed if stored as gzip.\nReturns an array of trade objects with pricing, volume, and market data.",
        "operationId": "getTradesData",
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "description": "The stock symbol to get trades for",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of trades to return (default: 100)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "contentEncoding": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TradesDataResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/volume-footprint/{symbol}": {
      "get": {
        "tags": [
          "prices"
        ],
        "summary": "getVolumeFootprint",
        "description": "This endpoint provides detailed volume footprint analysis for all available trades including:\nPrice action analysis (OHLC, VWAP)\nVolume distribution by price level\nOrder flow imbalances between buy and sell orders\nVolume clusters indicating high activity zones\nAbsorption signals for potential exhaustion points\nPoint of Control (POC) - price level with highest volume\nValue Area High/Low for 70% of traded volume\nDelta percentage to gauge buying vs selling pressure\n\nThe analysis is based on all available trade data from Redis and calculates comprehensive\nmarket microstructure metrics useful for understanding market dynamics.",
        "operationId": "getVolumeFootprint",
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Footprint"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/darkpools": {
      "get": {
        "tags": [
          "darkpool"
        ],
        "summary": "getDarkpoolTrades",
        "description": "Retrieves dark-pool trades in the requested date window with optional\nprice/size/value filters and consolidation.\nIf the query matches the pre-cached slice (last 10 days, default filters) the\nresult is served from Redis; otherwise it falls back to Bigtable.\nCurrent price is attached in parallel.",
        "operationId": "getDarkpoolTrades",
        "parameters": [
          {
            "name": "ticker",
            "in": "query",
            "description": "The stock ticker symbol",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "Start date in YYYY-MM-DD format",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "End date in YYYY-MM-DD format",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of trades to return",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "contentEncoding": "int64",
              "default": 1000
            }
          },
          {
            "name": "min_size",
            "in": "query",
            "description": "Minimum trade size",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "contentEncoding": "int64"
            }
          },
          {
            "name": "max_size",
            "in": "query",
            "description": "Maximum trade size",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "contentEncoding": "int64"
            }
          },
          {
            "name": "min_price",
            "in": "query",
            "description": "Minimum trade price",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "contentEncoding": "double"
            }
          },
          {
            "name": "max_price",
            "in": "query",
            "description": "Maximum trade price",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "contentEncoding": "double"
            }
          },
          {
            "name": "min_value",
            "in": "query",
            "description": "Minimum trade value",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "contentEncoding": "double"
            }
          },
          {
            "name": "max_value",
            "in": "query",
            "description": "Maximum trade value",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "contentEncoding": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/darkpools/daily-summary": {
      "get": {
        "tags": [
          "darkpool"
        ],
        "summary": "getDarkpoolDailySummary",
        "description": "Retrieves a day-by-day breakdown of darkpool trades showing weighted average price,\ntotal daily trade value, and trade volume. Data is fetched directly from Bigtable\nas we need raw unconsolidated trades for accurate calculations.",
        "operationId": "getDarkpoolDailySummary",
        "parameters": [
          {
            "name": "ticker",
            "in": "query",
            "description": "The stock ticker symbol",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "Start date in YYYY-MM-DD format",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "End date in YYYY-MM-DD format",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/dashboard/watchlist/{watchlist_id}": {
      "get": {
        "tags": [
          "watchlist"
        ],
        "summary": "getDashboardWatchlist",
        "description": "Retrieves the tickers or data associated with a specific dashboard watchlist ID.",
        "operationId": "getDashboardWatchlist",
        "parameters": [
          {
            "name": "watchlist_id",
            "in": "path",
            "description": "ID of the watchlist to retrieve.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "",
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/dashboard/watchlist/{watchlist_id}/predictions": {
      "get": {
        "tags": [
          "watchlist"
        ],
        "summary": "getWatchlistPredictions",
        "description": "Retrieves the predictions for a specific dashboard watchlist ID.",
        "operationId": "getWatchlistPredictions",
        "parameters": [
          {
            "name": "watchlist_id",
            "in": "path",
            "description": "ID of the watchlist to retrieve predictions for.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  },
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/watchlist": {
      "post": {
        "tags": [
          "watchlist"
        ],
        "summary": "fetchWatchlistData",
        "description": "Retrieves data for a specified list of stock tickers within a given date range.\nThe request parameters are passed in the request body.",
        "operationId": "fetchWatchlistData",
        "parameters": [],
        "requestBody": {
          "description": "Request body containing tickers and date range.",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/watchlistDataRequest"
                  },
                  {
                    "description": "Request body containing tickers and date range."
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "data": {
                "description": "The data for the requested watchlist tickers.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The data for the requested watchlist tickers.",
                      "contentMediaType": "text/plain"
                    }
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WatchlistData"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/earnings": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "getEarningsNextWeek",
        "description": "Retrieves earnings data for the upcoming week from the cache.",
        "operationId": "getEarningsNextWeek",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EarningsData"
                  },
                  "description": "",
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/g7-events": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "getG7EventsNextWeek",
        "description": "Retrieves G7 events data for the upcoming week from the cache.",
        "operationId": "getG7EventsNextWeek",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/G7EventsData"
                  },
                  "description": "",
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/ipos": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "getIPOsNextWeek",
        "description": "Retrieves IPO data for the upcoming week from the cache.",
        "operationId": "getIPOsNextWeek",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IPOData"
                  },
                  "description": "",
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/entity-holdings": {
      "get": {
        "tags": [
          "institutional-holdings"
        ],
        "summary": "getEntityHoldings",
        "description": "Retrieves holdings data for a specific entity, with optional filtering by ticker symbol and date range.\nReturns enriched holdings data including fund names, entity names, and ticker symbols.",
        "operationId": "getEntityHoldings",
        "parameters": [
          {
            "name": "entity_id",
            "in": "query",
            "description": "Entity ID to fetch holdings for",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ticker",
            "in": "query",
            "description": "Ticker symbol to filter holdings for",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "Start date in YYYY-MM-DD format",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "contentEncoding": "date"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "End date in YYYY-MM-DD format",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "contentEncoding": "date"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "contentEncoding": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EntityHoldingResponse"
                  },
                  "description": "",
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/fund-holdings": {
      "get": {
        "tags": [
          "institutional-holdings"
        ],
        "summary": "getFundHoldings",
        "description": "Retrieves holdings data for a specific fund, with optional filtering by ticker symbol and date range.\nReturns enriched holdings data including fund names, entity names, and ticker symbols.",
        "operationId": "getFundHoldings",
        "parameters": [
          {
            "name": "fund_id",
            "in": "query",
            "description": "Fund ID to fetch holdings for",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ticker",
            "in": "query",
            "description": "Ticker symbol to filter holdings for",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "Start date in YYYY-MM-DD format",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "contentEncoding": "date"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "End date in YYYY-MM-DD format",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "contentEncoding": "date"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "contentEncoding": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FundHoldingResponse"
                  },
                  "description": "",
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/search/institutional-holdings/entities": {
      "get": {
        "tags": [
          "institutional-holdings"
        ],
        "summary": "searchEntitiesParams",
        "description": "Searches for entities based on a query term, field, mode, and limit.",
        "operationId": "searchEntitiesParams",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Search term",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field",
            "in": "query",
            "description": "Field to search in (e.g., entity_proper_name)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "default": "entity_proper_name"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "Search mode (e.g., fuzzy, exact)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "default": "fuzzy"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of results to return",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "contentEncoding": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/search/institutional-holdings/funds": {
      "get": {
        "tags": [
          "institutional-holdings"
        ],
        "summary": "searchFundsParams",
        "description": "Searches for funds based on a query term, field, mode, and limit.",
        "operationId": "searchFundsParams",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Search term",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field",
            "in": "query",
            "description": "Field to search in (e.g., entity_proper_name)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "default": "entity_proper_name"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "Search mode (e.g., fuzzy, exact)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "default": "fuzzy"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of results to return",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "contentEncoding": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/search/institutional-holdings/stock": {
      "get": {
        "tags": [
          "institutional-holdings"
        ],
        "summary": "searchFsymsParams",
        "description": "Searches for Fsyms (stocks) based on a query term, field, mode, and limit.",
        "operationId": "searchFsymsParams",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Search term",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field",
            "in": "query",
            "description": "Field to search in (e.g., entity_proper_name)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "default": "entity_proper_name"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "Search mode (e.g., fuzzy, exact)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "default": "fuzzy"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of results to return",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "contentEncoding": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/estimates/ltg/{ticker}": {
      "get": {
        "tags": [
          "fundamentals"
        ],
        "summary": "getLongTermGrowthEstimate",
        "description": "Retrieves Long-Term Growth (LTG) estimate data for a given stock ticker.\nAn optional cutOff date can be provided to retrieve data as of that date.",
        "operationId": "getLongTermGrowthEstimate",
        "parameters": [
          {
            "name": "ticker",
            "in": "path",
            "description": "Stock ticker symbol.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cutOff",
            "in": "query",
            "description": "Optional cut-off date (e.g., 'YYYY-MM-DD') to retrieve estimates as of a specific date.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CombinedOutput"
                  },
                  "description": "",
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/estimates/metrics/{ticker}/{period}": {
      "get": {
        "tags": [
          "fundamentals"
        ],
        "summary": "getEstimatesMetrics",
        "description": "Retrieves the most recent estimate metrics (e.g., EPS, Sales) for a given stock ticker,\nfor a specified period type (ANN, QTR, or BOTH).\nAn optional cutOff date can be provided to retrieve data as of that date.",
        "operationId": "getEstimatesMetrics",
        "parameters": [
          {
            "name": "ticker",
            "in": "path",
            "description": "Stock ticker symbol.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "description": "Reporting period type.",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/period1"
                },
                {
                  "description": "Reporting period type."
                }
              ]
            }
          },
          {
            "name": "cutOff",
            "in": "query",
            "description": "Optional cut-off date (e.g., 'YYYY-MM-DD') to retrieve estimates as of a specific date.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CombinedOutput"
                  },
                  "description": "",
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/estimates/pricetarget/{ticker}": {
      "get": {
        "tags": [
          "fundamentals"
        ],
        "summary": "getPriceTargetEstimate",
        "description": "Retrieves price target estimate data for a given stock ticker.\nAn optional cutOff date can be provided to retrieve data as of that date.",
        "operationId": "getPriceTargetEstimate",
        "parameters": [
          {
            "name": "ticker",
            "in": "path",
            "description": "Stock ticker symbol.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cutOff",
            "in": "query",
            "description": "Optional cut-off date (e.g., 'YYYY-MM-DD') to retrieve estimates as of a specific date.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CombinedOutput"
                  },
                  "description": "",
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/fundamentals/range": {
      "get": {
        "tags": [
          "fundamentals"
        ],
        "summary": "getFinancialsMultiRange",
        "description": "Balance-sheet, cash-flow, income & ratios for many tickers across a year span.",
        "operationId": "getFinancialsMultiRange",
        "parameters": [
          {
            "name": "tickers",
            "in": "query",
            "description": "The tickers to fetch",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_year",
            "in": "query",
            "description": "The start year",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_year",
            "in": "query",
            "description": "The end year",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {},
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/fundamentals/{ticker}/period/{year}/{period}": {
      "get": {
        "tags": [
          "fundamentals"
        ],
        "summary": "getFinancialsPeriod",
        "description": "Balance-sheet, cash-flow, income & ratios for one specific year & reporting period (FY, Q1‒Q4).",
        "operationId": "getFinancialsPeriod",
        "parameters": [
          {
            "name": "ticker",
            "in": "path",
            "description": "The ticker to fetch",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "The year",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "description": "The period",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {},
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/fundamentals/{ticker}/range/{start_year}/{end_year}": {
      "get": {
        "tags": [
          "fundamentals"
        ],
        "summary": "getFinancialsSingleRange",
        "description": "Balance-sheet, cash-flow, income & ratios for one ticker across a year span.",
        "operationId": "getFinancialsSingleRange",
        "parameters": [
          {
            "name": "ticker",
            "in": "path",
            "description": "The ticker to fetch",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_year",
            "in": "path",
            "description": "The start year",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_year",
            "in": "path",
            "description": "The end year",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {},
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/fear-greed": {
      "get": {
        "tags": [
          "marketSentiment"
        ],
        "summary": "getFearGreedIndex",
        "description": "Retrieves the historical Fear & Greed Index data.",
        "operationId": "getFearGreedIndex",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FearGreedRecord"
                  },
                  "description": "",
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/markets/top-stocks/{type}": {
      "get": {
        "tags": [
          "marketSentiment"
        ],
        "summary": "fetchTopMarketStocks",
        "description": "Retrieves the top market stocks data based on the specified type.\nThe type parameter determines whether to fetch top gainers, losers, or most active stocks.",
        "operationId": "fetchTopMarketStocks",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "The type of stocks to fetch (gainers, losers, or active)",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/type"
                },
                {
                  "description": "The type of stocks to fetch (gainers, losers, or active)"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "data": {
                "description": "The top market stocks data (gainers, losers, or active stocks)",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The top market stocks data (gainers, losers, or active stocks)",
                      "contentMediaType": "text/plain"
                    }
                  }
                }
              }
            },
            "content": {}
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/news": {
      "get": {
        "tags": [
          "marketSentiment"
        ],
        "summary": "getNewsArticles",
        "description": "Retrieves news articles based on specified filter criteria such as date range,\nticker symbol, search text, sentiment score, market impact, and  .\nSupports pagination via the limit parameter.",
        "operationId": "getNewsArticles",
        "parameters": [
          {
            "name": "date_range",
            "in": "query",
            "description": "Date range \"1d, 7d, 30d, 90d\". Defaults to 7d.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number. Defaults to 0.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "contentEncoding": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SkeletonNewsArticle"
                  },
                  "description": "",
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/news/sentiment/{ticker}": {
      "get": {
        "tags": [
          "marketSentiment"
        ],
        "summary": "getTickerSentiment30D",
        "description": "Get sentiment scores for a ticker.",
        "operationId": "getTickerSentiment30D",
        "parameters": [
          {
            "name": "ticker",
            "in": "path",
            "description": "Stock ticker symbol (e.g., AAPL, TSLA)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiPeriodSentimentMetrics"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/news/{id}": {
      "get": {
        "tags": [
          "marketSentiment"
        ],
        "summary": "getNewsArticle",
        "description": "Retrieves a news article by its unique ID.",
        "operationId": "getNewsArticle",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique ID of the news article",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SkeletonNewsArticle"
                  },
                  "description": "",
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/risk-analysis-score": {
      "get": {
        "tags": [
          "marketSentiment"
        ],
        "summary": "getRiskAnalysisScore",
        "description": "Retrieves the historical Risk Analysis Score data.",
        "operationId": "getRiskAnalysisScore",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RiskAnalysisScores"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/market-status": {
      "get": {
        "tags": [
          "market"
        ],
        "summary": "getMarketStatus",
        "description": "Fetches the current market status from Polygon.io and returns whether the market is considered open.",
        "operationId": "getMarketStatus",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketStatus"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/marketsnapshot": {
      "get": {
        "tags": [
          "market"
        ],
        "summary": "getMarketSnapshot",
        "description": "This will retrieve the market snapshot for all available tickers\nwith their current price and today's change",
        "operationId": "getMarketSnapshot",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MarketSnapshotItem"
                  },
                  "description": "",
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/tickertape": {
      "get": {
        "tags": [
          "market"
        ],
        "summary": "getTickertapeData",
        "description": "This will retrieve the current market data for a predefined list of popular stock tickers",
        "operationId": "getTickertapeData",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/StockData"
                  },
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/options/chain/{ticker}": {
      "get": {
        "tags": [
          "options"
        ],
        "summary": "getOptionsChain",
        "description": "Retrieves comprehensive options chain data for a given underlying ticker symbol.\nWhen calculate_put_call_ratio is set to true and contract_type is 'both', the response\nwill include put/call ratio analysis which is useful for market sentiment analysis.",
        "operationId": "getOptionsChain",
        "parameters": [
          {
            "name": "ticker",
            "in": "path",
            "description": "The underlying ticker symbol (e.g., AAPL, TSLA, SPY)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Start date for options expiration range (YYYY-MM-DD format)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "End date for options expiration range (YYYY-MM-DD format)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contract_type",
            "in": "query",
            "description": "Type of contracts to return",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/contract_type"
                },
                {
                  "description": "Type of contracts to return"
                }
              ]
            }
          },
          {
            "name": "money_status",
            "in": "query",
            "description": "Money status filter",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/money_status"
                },
                {
                  "description": "Money status filter"
                }
              ]
            }
          },
          {
            "name": "calculate_put_call_ratio",
            "in": "query",
            "description": "Whether to calculate put/call ratio",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "min_strike_price",
            "in": "query",
            "description": "Minimum strike price filter",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "contentEncoding": "double"
            }
          },
          {
            "name": "max_strike_price",
            "in": "query",
            "description": "Maximum strike price filter",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "contentEncoding": "double"
            }
          },
          {
            "name": "min_break_even_price",
            "in": "query",
            "description": "Minimum break-even price filter",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "contentEncoding": "double"
            }
          },
          {
            "name": "max_break_even_price",
            "in": "query",
            "description": "Maximum break-even price filter",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "contentEncoding": "double"
            }
          },
          {
            "name": "min_current_price",
            "in": "query",
            "description": "Minimum current option price filter",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "contentEncoding": "double"
            }
          },
          {
            "name": "max_current_price",
            "in": "query",
            "description": "Maximum current option price filter",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "contentEncoding": "double"
            }
          },
          {
            "name": "min_price_change",
            "in": "query",
            "description": "Minimum price change filter",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "contentEncoding": "double"
            }
          },
          {
            "name": "max_price_change",
            "in": "query",
            "description": "Maximum price change filter",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "contentEncoding": "double"
            }
          },
          {
            "name": "min_price_change_percentage",
            "in": "query",
            "description": "Minimum price change percentage filter",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "contentEncoding": "double"
            }
          },
          {
            "name": "max_price_change_percentage",
            "in": "query",
            "description": "Maximum price change percentage filter",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "contentEncoding": "double"
            }
          },
          {
            "name": "min_delta",
            "in": "query",
            "description": "Minimum delta (price sensitivity) filter",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "contentEncoding": "double"
            }
          },
          {
            "name": "max_delta",
            "in": "query",
            "description": "Maximum delta (price sensitivity) filter",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "contentEncoding": "double"
            }
          },
          {
            "name": "min_gamma",
            "in": "query",
            "description": "Minimum gamma (delta sensitivity) filter",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "contentEncoding": "double"
            }
          },
          {
            "name": "max_gamma",
            "in": "query",
            "description": "Maximum gamma (delta sensitivity) filter",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "contentEncoding": "double"
            }
          },
          {
            "name": "min_theta",
            "in": "query",
            "description": "Minimum theta (time decay) filter",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "contentEncoding": "double"
            }
          },
          {
            "name": "max_theta",
            "in": "query",
            "description": "Maximum theta (time decay) filter",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "contentEncoding": "double"
            }
          },
          {
            "name": "min_vega",
            "in": "query",
            "description": "Minimum vega (volatility sensitivity) filter",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "contentEncoding": "double"
            }
          },
          {
            "name": "max_vega",
            "in": "query",
            "description": "Maximum vega (volatility sensitivity) filter",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "contentEncoding": "double"
            }
          },
          {
            "name": "min_open_interest",
            "in": "query",
            "description": "Minimum open interest filter",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "max_open_interest",
            "in": "query",
            "description": "Maximum open interest filter",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "min_volume",
            "in": "query",
            "description": "Minimum volume filter",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "contentEncoding": "double"
            }
          },
          {
            "name": "max_volume",
            "in": "query",
            "description": "Maximum volume filter",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "contentEncoding": "double"
            }
          },
          {
            "name": "min_implied_vol",
            "in": "query",
            "description": "Minimum implied volatility filter",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "contentEncoding": "double"
            }
          },
          {
            "name": "max_implied_vol",
            "in": "query",
            "description": "Maximum implied volatility filter",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "contentEncoding": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptionsChain"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/options/expiration/{ticker}": {
      "get": {
        "tags": [
          "options"
        ],
        "summary": "getExpirationDates",
        "description": "Returns a list of available expiration dates for options contracts of a given underlying ticker.",
        "operationId": "getExpirationDates",
        "parameters": [
          {
            "name": "ticker",
            "in": "path",
            "description": "The underlying ticker symbol (e.g., AAPL, TSLA, SPY)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpirationDates"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/options/filter-ranges/{ticker}": {
      "get": {
        "tags": [
          "options"
        ],
        "summary": "getOptionsFilterRanges",
        "description": "Returns the minimum and maximum values for all filterable fields in the options chain data.",
        "operationId": "getOptionsFilterRanges",
        "parameters": [
          {
            "name": "ticker",
            "in": "path",
            "description": "The underlying ticker symbol (e.g., AAPL, TSLA, SPY)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Start date for options expiration range (YYYY-MM-DD format)",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "End date for options expiration range (YYYY-MM-DD format)",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptionsFilterRanges"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/options/historical/{ticker}": {
      "get": {
        "tags": [
          "options"
        ],
        "summary": "getHistoricalOptionsData",
        "description": "Retrieves historical aggregate price data (OHLCV bars) for a specific options contract.\nBoth start_date and end_date are required parameters and should be provided in YYYY-MM-DD format.",
        "operationId": "getHistoricalOptionsData",
        "parameters": [
          {
            "name": "ticker",
            "in": "path",
            "description": "The options contract ticker (e.g., O:AAPL240119C00150000)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Start date for historical data (YYYY-MM-DD format)",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "End date for historical data (YYYY-MM-DD format)",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "interval",
            "in": "query",
            "description": "Time interval for aggregation",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/interval"
                },
                {
                  "description": "Time interval for aggregation"
                }
              ]
            }
          },
          {
            "name": "time_break",
            "in": "query",
            "description": "Time multiplier for the interval (e.g., 5 for 5-minute bars)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "contentEncoding": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricalOptionsData"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/price-forecasts": {
      "get": {
        "tags": [
          "forecasts"
        ],
        "summary": "getPriceForecasts",
        "description": "Returns a map where each key is a ticker symbol and the value is an array of forecast data points.",
        "operationId": "getPriceForecasts",
        "parameters": [
          {
            "name": "forecast_horizon",
            "in": "query",
            "description": "The number of days to forecast (1–10)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "contentEncoding": "int32",
              "default": 4
            }
          },
          {
            "name": "tickers",
            "in": "query",
            "description": "Comma-separated list of stock ticker symbols",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "default": "AAPL,TSLA,AMZN,NVDA,MSFT,GOOG"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "data": {
                "description": "The forecast data keyed by ticker symbol",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The forecast data keyed by ticker symbol",
                      "contentMediaType": "text/plain"
                    }
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  },
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/stock-screener/metrics": {
      "get": {
        "tags": [
          "stockScreener"
        ],
        "summary": "getAvailableMetrics",
        "description": "Returns a list of available financial metrics that can be used in\nscreening criteria. The list can be filtered by period type.",
        "operationId": "getAvailableMetrics",
        "parameters": [
          {
            "name": "period",
            "in": "query",
            "description": "Period type to filter metrics (QUARTERLY, ANNUAL, or ALL)",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/period2"
                },
                {
                  "description": "Period type to filter metrics (QUARTERLY, ANNUAL, or ALL)"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "data": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "contentMediaType": "text/plain"
                    }
                  }
                }
              },
              "success": {
                "description": "Indicates if the request was successful",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Indicates if the request was successful",
                      "contentMediaType": "text/plain"
                    }
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/stock-screener/screen": {
      "post": {
        "tags": [
          "stockScreener"
        ],
        "summary": "screenStocks",
        "description": "Filters stocks based on the provided financial criteria and returns\nmatching ticker symbols. The screening is performed against historical\nfinancial data up to the specified cutoff date.",
        "operationId": "screenStocks",
        "parameters": [],
        "requestBody": {
          "description": "The screening request body",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ScreenRequest"
                  },
                  {
                    "description": "The screening request body"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "data": {
                "description": "The screening result data",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The screening result data",
                      "contentMediaType": "text/plain"
                    }
                  }
                }
              },
              "error": {
                "description": "Error message if success is false",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Error message if success is false",
                      "contentMediaType": "text/plain"
                    }
                  }
                }
              },
              "success": {
                "description": "Indicates if the request was successful",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Indicates if the request was successful",
                      "contentMediaType": "text/plain"
                    }
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScreenerResult"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/technical-analysis/fibonacci-carmilia/{symbol}": {
      "get": {
        "tags": [
          "analysis"
        ],
        "summary": "getFibonacciCarmiliaLevels",
        "description": "This will calculate Fibonacci retracement levels and Camarilla pivot points for the specified stock symbol",
        "operationId": "getFibonacciCarmiliaLevels",
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "description": "The stock symbol to analyze",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalysisResults"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/ticker/{ticker}/profile": {
      "get": {
        "tags": [
          "tickers"
        ],
        "summary": "GetTickerProfileData",
        "description": "Returns the JSON profile for the specified symbol.",
        "operationId": "GetTickerProfileData",
        "parameters": [
          {
            "name": "ticker",
            "in": "path",
            "description": "The stock ticker symbol (e.g., AAPL).",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TickerProfile"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/tickers": {
      "get": {
        "tags": [
          "tickers"
        ],
        "summary": "GetTickersList",
        "description": "Returns the full list of symbols from cache or Bigtable.",
        "operationId": "GetTickersList",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "",
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/tickers-with-names": {
      "get": {
        "tags": [
          "tickers"
        ],
        "summary": "GetTickersListWithNames",
        "description": "Returns all tracked tickers and their profiles.",
        "operationId": "GetTickersListWithNames",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/{ticker}/stock-splits": {
      "get": {
        "tags": [
          "tickers"
        ],
        "summary": "getStockSplits",
        "description": "Retrieves the stock split history for a given ticker symbol from Bigtable.",
        "operationId": "getStockSplits",
        "parameters": [
          {
            "name": "ticker",
            "in": "path",
            "description": "The stock ticker symbol (e.g., AAPL).",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockSplitsData"
                  },
                  "description": "",
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/treasury-rates": {
      "get": {
        "tags": [
          "treasury-rates"
        ],
        "summary": "getTreasuryRates",
        "description": "Retrieves treasury rates data from Bigtable for the specified date range.\nIf no dates are provided, returns data for the current date.",
        "operationId": "getTreasuryRates",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "description": "Start date for the range (YYYY-MM-DD format)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "contentEncoding": "date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "End date for the range (YYYY-MM-DD format)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "contentEncoding": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TreasuryRatesData"
                  },
                  "description": "",
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/investor-search": {
      "get": {
        "summary": "investors",
        "description": "Returns up to the first 100 investors whose names start with the supplied prefix.",
        "operationId": "investors",
        "parameters": [
          {
            "name": "prefix",
            "in": "query",
            "description": "The prefix to search for",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HolderInfo"
                  },
                  "description": "",
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    }
  },
  "components": {
    "schemas": {
      "APIKey": {
        "title": "APIKey",
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "contentEncoding": "date-time",
            "examples": [
              "2021-01-01T00:00:00Z"
            ]
          },
          "id": {
            "type": "string",
            "examples": [
              "123e4567-e89b-12d3-a456-426614174000"
            ]
          },
          "key": {
            "type": "string",
            "examples": [
              "123e4567-e89b-12d3-a456-426614174000"
            ]
          },
          "name": {
            "type": "string",
            "examples": [
              "My API Key"
            ]
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "examples": [
              [
                "read",
                "write"
              ]
            ]
          }
        },
        "description": "APIKey represents an API key with its metadata"
      },
      "AggregatedDatarepresentsaggregatedhistoricaldata.": {
        "title": "AggregatedDatarepresentsaggregatedhistoricaldata.",
        "type": "object",
        "properties": {
          "close": {
            "type": "number",
            "examples": [
              201.7
            ]
          },
          "high": {
            "type": "number",
            "examples": [
              202.13
            ]
          },
          "low": {
            "type": "number",
            "examples": [
              200.12
            ]
          },
          "open": {
            "type": "number",
            "examples": [
              200.28
            ]
          },
          "symbol": {
            "type": "string",
            "examples": [
              "AAPL"
            ]
          },
          "transactions": {
            "type": "integer",
            "contentEncoding": "int64",
            "examples": [
              501431
            ]
          },
          "volume": {
            "type": "number",
            "examples": [
              35423294
            ]
          },
          "vwap": {
            "type": "number",
            "examples": [
              201.2063
            ]
          }
        }
      },
      "Analysis": {
        "title": "Analysis",
        "type": "object",
        "properties": {
          "current_events_analysis": {
            "type": "string",
            "examples": [
              "The current events landscape for 2025-06-18 is dominated by high-impact communications from the Federal Reserve, ..."
            ]
          },
          "news_analysis": {
            "type": "string",
            "examples": [
              "The news summary for 2025-06-18 underscores a market environment characterized by uncertainty and a high potential for volatility, primarily driven by the scheduled FOMC monetary policy decision and Chair Powell's press conference..."
            ]
          },
          "overall_risk_analysis": {
            "type": "string",
            "examples": [
              "The overall market risk for 2025-06-18 is assessed as 75, placing it in the 'High Risk / Volatile' category..."
            ]
          },
          "price_data_analysis": {
            "type": "string",
            "examples": [
              "No explicit price data (Dark Pools, Options, Treasuries, Tickers) was provided for 2025-06-18..."
            ]
          }
        }
      },
      "AnalysisResults": {
        "title": "AnalysisResults",
        "type": "object",
        "properties": {
          "camarilla_levels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CamarillaLevel"
            },
            "description": ""
          },
          "fibonacci_levels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FibonacciRetractmentLevel"
            },
            "description": ""
          }
        },
        "description": "AnalysisResults contains the results of Fibonacci and Camarilla analysis"
      },
      "CamarillaLevel": {
        "title": "CamarillaLevel",
        "type": "object",
        "properties": {
          "level": {
            "type": "string",
            "examples": [
              "H1"
            ]
          },
          "value": {
            "type": "number",
            "examples": [
              195.496875
            ]
          }
        },
        "description": "CamarillaLevel stores a Camarilla pivot point"
      },
      "ChatHistory": {
        "title": "ChatHistory",
        "type": "object",
        "properties": {
          "chatName": {
            "type": "string",
            "examples": [
              "My Chat"
            ]
          },
          "history": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChatMessage"
            },
            "description": ""
          }
        }
      },
      "ChatMessage": {
        "title": "ChatMessage",
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "examples": [
              "Hello, how are you?"
            ]
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "examples": [
              [
                "file1.txt",
                "file2.txt"
              ]
            ]
          },
          "role": {
            "type": "string",
            "examples": [
              "user"
            ]
          }
        }
      },
      "CombinedOutput": {
        "title": "CombinedOutput",
        "type": "object",
        "properties": {
          "annual": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PeriodBlock"
              },
              {}
            ]
          },
          "quarterly": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PeriodBlock"
              },
              {}
            ]
          },
          "ticker": {
            "type": "string"
          }
        }
      },
      "CurrentDayInfo": {
        "title": "CurrentDayInfo",
        "type": "object",
        "properties": {
          "close": {
            "type": "number"
          },
          "high": {
            "type": "number"
          },
          "low": {
            "type": "number"
          },
          "open": {
            "type": "number"
          },
          "todays_change": {
            "type": "number"
          },
          "todays_change_perc": {
            "type": "number"
          },
          "volume": {
            "type": "number"
          }
        }
      },
      "CurrentPrice": {
        "title": "CurrentPrice",
        "type": "object",
        "properties": {
          "ask_price": {
            "type": "number",
            "examples": [
              195.74
            ]
          },
          "ask_size": {
            "type": "integer",
            "contentEncoding": "int32",
            "examples": [
              100
            ]
          },
          "bid_price": {
            "type": "number",
            "examples": [
              195.72
            ]
          },
          "bid_size": {
            "type": "integer",
            "contentEncoding": "int32",
            "examples": [
              200
            ]
          },
          "change_percentage": {
            "type": "number",
            "examples": [
              0.0029
            ]
          },
          "dollar_change": {
            "type": "number",
            "examples": [
              0.56
            ]
          },
          "previous_close": {
            "type": "number",
            "examples": [
              195.16
            ]
          },
          "price": {
            "type": "number",
            "examples": [
              195.72
            ]
          },
          "sequence": {
            "type": "integer",
            "contentEncoding": "int32",
            "examples": [
              164525600
            ]
          },
          "side": {
            "type": "string",
            "examples": [
              "Bid"
            ]
          },
          "symbol": {
            "type": "string",
            "examples": [
              "AAPL"
            ]
          },
          "timestamp": {
            "type": "string",
            "examples": [
              "2025-06-18 14:54:20"
            ]
          },
          "trade_size": {
            "type": "integer",
            "contentEncoding": "int32",
            "examples": [
              200
            ]
          }
        }
      },
      "DailyRowData": {
        "title": "DailyRowData",
        "type": "object",
        "properties": {
          "close": {
            "type": "number"
          },
          "high": {
            "type": "number"
          },
          "low": {
            "type": "number"
          },
          "open": {
            "type": "number"
          },
          "symbol": {
            "type": "string"
          },
          "ts_event": {
            "type": "string"
          },
          "volume": {
            "type": "integer",
            "contentEncoding": "int64"
          },
          "vwap": {
            "type": "number"
          }
        },
        "description": "DailyRowData represents daily historical price data from Financial Modeling Prep API"
      },
      "DarkpoolTrend": {
        "title": "DarkpoolTrend",
        "required": [
          "absolute_volume_change",
          "darkpool_ratio",
          "prev_dollar_volume",
          "prev_record_date",
          "prev_volume",
          "record_date",
          "relative_volume_change",
          "ticker",
          "total_dollar_volume",
          "total_volume",
          "trend"
        ],
        "type": "object",
        "properties": {
          "absolute_volume_change": {
            "type": "integer",
            "description": "The percentage change in volume from previous date",
            "contentEncoding": "int64",
            "examples": [
              23
            ]
          },
          "darkpool_ratio": {
            "type": "number",
            "description": "The darkpool/total volume ratio",
            "examples": [
              0.123456789
            ]
          },
          "prev_dollar_volume": {
            "type": "number",
            "description": "The previous day's total dollar volume",
            "examples": [
              1000000
            ]
          },
          "prev_record_date": {
            "type": "string",
            "description": "The date of the previous record",
            "examples": [
              "2023-03-11"
            ]
          },
          "prev_volume": {
            "type": "integer",
            "description": "The previous day's total volume",
            "contentEncoding": "int64",
            "examples": [
              1000000
            ]
          },
          "record_date": {
            "type": "string",
            "description": "The date of the record in YYYY-MM-DD format",
            "examples": [
              "2023-03-12"
            ]
          },
          "relative_volume_change": {
            "type": "number",
            "description": "The percentage change in volume from previous date",
            "examples": [
              23.45
            ]
          },
          "ticker": {
            "type": "string",
            "description": "The stock ticker symbol",
            "examples": [
              "AAPL"
            ]
          },
          "total_dollar_volume": {
            "type": "number",
            "description": "The total dollar volume of darkpool trades",
            "examples": [
              1234567.89
            ]
          },
          "total_volume": {
            "type": "integer",
            "description": "The total volume of darkpool trades for this ticker on this date",
            "contentEncoding": "int64",
            "examples": [
              1234567
            ]
          },
          "trend": {
            "type": "string",
            "description": "Whether the volume trend is up, down, or flat",
            "examples": [
              "up"
            ]
          }
        }
      },
      "EarningsData": {
        "title": "EarningsData",
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "examples": [
              "2025-06-24"
            ]
          },
          "symbol": {
            "type": "string",
            "examples": [
              "CUK"
            ]
          }
        }
      },
      "EntityHoldingResponse": {
        "title": "EntityHoldingResponse",
        "type": "object",
        "properties": {
          "adj_holding": {
            "type": "number",
            "examples": [
              1000000.5
            ]
          },
          "adj_mv": {
            "type": "number",
            "examples": [
              150000000.75
            ]
          },
          "entity_name": {
            "type": "string",
            "examples": [
              "\"BlackRock Inc.\""
            ]
          },
          "report_date": {
            "type": "string",
            "contentEncoding": "date-time"
          },
          "reported_holding": {
            "type": "number",
            "examples": [
              1000000
            ]
          },
          "ticker": {
            "type": "string",
            "examples": [
              "\"AAPL\""
            ]
          }
        }
      },
      "ErrorResponse": {
        "title": "ErrorResponse",
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "ExpirationDates": {
        "title": "ExpirationDates",
        "type": "object",
        "properties": {
          "dates": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        }
      },
      "ExtraInfo": {
        "title": "ExtraInfo",
        "type": "object",
        "properties": {
          "highest_price": {
            "type": "number"
          },
          "lowest_price": {
            "type": "number"
          },
          "market_cap": {
            "type": "number"
          }
        }
      },
      "FearGreedRecord": {
        "title": "FearGreedRecord",
        "type": "object",
        "properties": {
          "average_put_call_option_ratio": {
            "type": "number",
            "examples": [
              0.727365952350784
            ]
          },
          "date": {
            "type": "string",
            "examples": [
              "2025-06-18"
            ]
          },
          "junk_bonds_vs_investment_bonds_spread": {
            "type": "number",
            "examples": [
              1.41395557638261
            ]
          },
          "market_greed_level": {
            "type": "number",
            "examples": [
              54.3714285714286
            ]
          },
          "market_returns_vs_bonds": {
            "type": "number",
            "examples": [
              0.942943917854163
            ]
          },
          "market_sentiment": {
            "type": "string",
            "examples": [
              "neutral"
            ]
          },
          "vix_volatility": {
            "type": "number",
            "examples": [
              19.89
            ]
          }
        }
      },
      "FibonacciRetractmentLevel": {
        "title": "FibonacciRetractmentLevel",
        "type": "object",
        "properties": {
          "ratio": {
            "type": "string",
            "examples": [
              "Fib_23.6%"
            ]
          },
          "value": {
            "type": "number",
            "examples": [
              204.871
            ]
          }
        },
        "description": "FibonacciRetractmentLevel stores a Fibonacci retracement level with its ratio and value"
      },
      "FilterCriteria": {
        "title": "FilterCriteria",
        "required": [
          "metric",
          "operator",
          "value"
        ],
        "type": "object",
        "properties": {
          "metric": {
            "type": "string",
            "description": "The financial metric to filter on (e.g., \"eps\", \"revenue\", \"current_ratio\")"
          },
          "operator": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Operator"
              },
              {
                "description": "The comparison operator (>=, <=, ==, !=, >, <)"
              }
            ]
          },
          "value": {
            "description": "The value to compare against (can be number or string)"
          }
        }
      },
      "FilterRange": {
        "title": "FilterRange",
        "type": "object",
        "properties": {
          "max": {
            "type": "number"
          },
          "min": {
            "type": "number"
          }
        },
        "description": "FilterRange represents min/max values for a numeric field"
      },
      "Footprint": {
        "title": "Footprint",
        "type": "object",
        "properties": {
          "buy_volume": {
            "type": "integer",
            "contentEncoding": "int32",
            "examples": [
              19651096
            ]
          },
          "close_price": {
            "type": "number",
            "examples": [
              195.44
            ]
          },
          "delta": {
            "type": "integer",
            "contentEncoding": "int64",
            "examples": [
              533698
            ]
          },
          "delta_pct": {
            "type": "number",
            "examples": [
              1.38
            ]
          },
          "high_price": {
            "type": "number",
            "examples": [
              207.88
            ]
          },
          "imbalances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Imbalance"
            },
            "description": ""
          },
          "low_price": {
            "type": "number",
            "examples": [
              195.07
            ]
          },
          "neutral_volume": {
            "type": "integer",
            "contentEncoding": "int32",
            "examples": [
              0
            ]
          },
          "open_price": {
            "type": "number",
            "examples": [
              198.74
            ]
          },
          "poc_price": {
            "type": "number",
            "examples": [
              200
            ]
          },
          "poc_volume": {
            "type": "integer",
            "contentEncoding": "int32",
            "examples": [
              193614
            ]
          },
          "sell_volume": {
            "type": "integer",
            "contentEncoding": "int32",
            "examples": [
              19117398
            ]
          },
          "symbol": {
            "type": "string",
            "examples": [
              "AAPL"
            ]
          },
          "value_area_high": {
            "type": "number",
            "examples": [
              205.1
            ]
          },
          "value_area_low": {
            "type": "number",
            "examples": [
              196
            ]
          },
          "volume_clusters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VolumeCluster"
            },
            "description": ""
          },
          "vwap": {
            "type": "number",
            "examples": [
              200.5829
            ]
          }
        },
        "description": "Volume Footprint"
      },
      "FormattedOptionsContractrepresentsaflattenedoptionscontractstructure.": {
        "title": "FormattedOptionsContractrepresentsaflattenedoptionscontractstructure.",
        "type": "object",
        "properties": {
          "break_even_price": {
            "type": "number",
            "examples": [
              196.025
            ]
          },
          "contract_fair_market_value": {
            "type": "number",
            "examples": [
              193.722
            ]
          },
          "contract_type": {
            "type": "string",
            "examples": [
              "put"
            ]
          },
          "current_price": {
            "type": "number",
            "examples": [
              193.722
            ]
          },
          "day_high": {
            "type": "number",
            "examples": [
              194.861
            ]
          },
          "day_low": {
            "type": "number",
            "examples": [
              192.406
            ]
          },
          "day_open": {
            "type": "number",
            "examples": [
              194.196
            ]
          },
          "delta": {
            "type": "number",
            "examples": [
              -0.972133
            ]
          },
          "expiration_date": {
            "type": "string",
            "examples": [
              "2025-08-15"
            ]
          },
          "gamma": {
            "type": "number",
            "examples": [
              0.001503
            ]
          },
          "implied_volatility": {
            "type": "number",
            "examples": [
              0.924785
            ]
          },
          "money_status": {
            "type": "string",
            "examples": [
              "ITM"
            ]
          },
          "open_interest": {
            "type": "integer",
            "contentEncoding": "int64",
            "examples": [
              0
            ]
          },
          "option_symbol": {
            "type": "string",
            "examples": [
              "O:AAPL250815P00390000"
            ]
          },
          "previous_close": {
            "type": "number",
            "examples": [
              177.85
            ]
          },
          "price_change": {
            "type": "number",
            "examples": [
              15.872
            ]
          },
          "price_change_percentage": {
            "type": "number",
            "examples": [
              8.924374
            ]
          },
          "strike_price": {
            "type": "number",
            "examples": [
              390
            ]
          },
          "theta": {
            "type": "number",
            "examples": [
              -0.025231
            ]
          },
          "underlying_price": {
            "type": "number",
            "examples": [
              196.41
            ]
          },
          "underlying_symbol": {
            "type": "string",
            "examples": [
              "AAPL"
            ]
          },
          "vega": {
            "type": "number",
            "examples": [
              0.040892
            ]
          },
          "volume": {
            "type": "integer",
            "contentEncoding": "int64",
            "examples": [
              0
            ]
          }
        }
      },
      "FundHoldingResponse": {
        "title": "FundHoldingResponse",
        "type": "object",
        "properties": {
          "adj_holding": {
            "type": "number",
            "examples": [
              1000000.5
            ]
          },
          "adj_mv": {
            "type": "number",
            "examples": [
              150000000.75
            ]
          },
          "fund_name": {
            "type": "string",
            "examples": [
              "\"Vanguard Total Stock Market Index Fund\""
            ]
          },
          "report_date": {
            "type": "string",
            "contentEncoding": "date-time"
          },
          "reported_holding": {
            "type": "number",
            "examples": [
              1000000
            ]
          },
          "ticker": {
            "type": "string",
            "examples": [
              "\"AAPL\""
            ]
          }
        }
      },
      "FuturesRowData": {
        "title": "FuturesRowData",
        "type": "object",
        "properties": {
          "close": {
            "type": "number",
            "examples": [
              195.72
            ]
          },
          "date": {
            "type": "string",
            "examples": [
              "2025-06-18"
            ]
          },
          "high": {
            "type": "number",
            "examples": [
              207.88
            ]
          },
          "low": {
            "type": "number",
            "examples": [
              195.44
            ]
          },
          "name": {
            "type": "string",
            "examples": [
              "Apple Inc."
            ]
          },
          "open": {
            "type": "number",
            "examples": [
              195.72
            ]
          },
          "symbol": {
            "type": "string",
            "examples": [
              "AAPL"
            ]
          },
          "volume": {
            "type": "integer",
            "contentEncoding": "int64",
            "examples": [
              19651096
            ]
          },
          "vwap": {
            "type": "number",
            "examples": [
              200.5829
            ]
          }
        }
      },
      "G7EventsData": {
        "title": "G7EventsData",
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "examples": [
              "CA"
            ]
          },
          "date": {
            "type": "string",
            "examples": [
              "2025-06-24"
            ]
          },
          "estimate": {
            "type": "number",
            "examples": [
              0
            ]
          },
          "event": {
            "type": "string",
            "examples": [
              "CPI (May)"
            ]
          },
          "impact": {
            "type": "string",
            "examples": [
              "High"
            ]
          },
          "previous": {
            "type": "number",
            "examples": [
              3.1
            ]
          },
          "unit": {
            "type": "string",
            "examples": [
              "%"
            ]
          }
        }
      },
      "HistoricalOptionsData": {
        "title": "HistoricalOptionsData",
        "type": "object",
        "properties": {
          "adjusted": {
            "type": "boolean",
            "examples": [
              true
            ]
          },
          "fetch_time": {
            "type": "string",
            "contentEncoding": "date-time",
            "examples": [
              "2025-06-18T20:27:16.714618661Z"
            ]
          },
          "query_count": {
            "type": "integer",
            "contentEncoding": "int64",
            "examples": [
              13
            ]
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AggregatedDatarepresentsaggregatedhistoricaldata."
            },
            "description": ""
          },
          "results_count": {
            "type": "integer",
            "contentEncoding": "int64",
            "examples": [
              13
            ]
          },
          "status": {
            "type": "string",
            "examples": [
              "OK"
            ]
          },
          "symbol": {
            "type": "string",
            "examples": [
              "AAPL"
            ]
          }
        }
      },
      "HolderInfo": {
        "title": "HolderInfo",
        "type": "object",
        "properties": {
          "cik": {
            "type": "string",
            "description": "CIK (Central Index Key) of the holder",
            "examples": [
              "0000320193"
            ]
          },
          "name": {
            "type": "string",
            "description": "Display name of the holder",
            "examples": [
              "BlackRock, Inc."
            ]
          }
        }
      },
      "IPOData": {
        "title": "IPOData",
        "type": "object",
        "properties": {
          "actions": {
            "type": "string",
            "examples": [
              "Expected"
            ]
          },
          "company": {
            "type": "string",
            "examples": [
              "Kandal M Venture Limited"
            ]
          },
          "date": {
            "type": "string",
            "examples": [
              "2025-06-24"
            ]
          },
          "exchange": {
            "type": "string",
            "examples": [
              "NASDAQ"
            ]
          },
          "marketCap": {
            "type": "integer",
            "contentEncoding": "int64",
            "examples": [
              11500000
            ]
          },
          "priceRange": {
            "type": "string",
            "examples": [
              "4.00 - 5.00"
            ]
          },
          "shares": {
            "type": "integer",
            "contentEncoding": "int64",
            "examples": [
              2000000
            ]
          },
          "symbol": {
            "type": "string",
            "examples": [
              "FMFC"
            ]
          }
        }
      },
      "Imbalance": {
        "title": "Imbalance",
        "type": "object",
        "properties": {
          "buy_vol": {
            "type": "integer",
            "contentEncoding": "int32",
            "examples": [
              15859
            ]
          },
          "price": {
            "type": "number",
            "examples": [
              203.84
            ]
          },
          "ratio": {
            "type": "string",
            "examples": [
              "2.67"
            ]
          },
          "sell_vol": {
            "type": "integer",
            "contentEncoding": "int32",
            "examples": [
              5947
            ]
          }
        }
      },
      "MarketSnapshotItem": {
        "title": "MarketSnapshotItem",
        "type": "object",
        "properties": {
          "current_price": {
            "type": "number",
            "examples": [
              19.27
            ]
          },
          "dollar_change": {
            "type": "number",
            "examples": [
              0.0500000000000007
            ]
          },
          "last_quote_ask_price": {
            "type": "number",
            "examples": [
              19.3
            ]
          },
          "last_quote_ask_size": {
            "type": "integer",
            "contentEncoding": "int64",
            "examples": [
              5
            ]
          },
          "last_quote_bid_price": {
            "type": "number",
            "examples": [
              19.17
            ]
          },
          "last_quote_bid_size": {
            "type": "integer",
            "contentEncoding": "int64",
            "examples": [
              5
            ]
          },
          "last_trade_price": {
            "type": "number",
            "examples": [
              19.22
            ]
          },
          "last_trade_size": {
            "type": "integer",
            "contentEncoding": "int64",
            "examples": [
              100
            ]
          },
          "ticker": {
            "type": "string",
            "examples": [
              "BLOX"
            ]
          },
          "timestamp": {
            "type": "integer",
            "contentEncoding": "int64",
            "examples": [
              1750260240000
            ]
          },
          "todays_change": {
            "type": "number",
            "examples": [
              0.0505999999999993
            ]
          }
        },
        "description": "MarketSnapshotItem represents a single ticker item in the market snapshot"
      },
      "MarketStatus": {
        "title": "MarketStatus",
        "type": "object",
        "properties": {
          "market_open": {
            "type": "boolean",
            "examples": [
              true
            ]
          }
        }
      },
      "MultiPeriodSentimentMetrics": {
        "title": "MultiPeriodSentimentMetrics",
        "type": "object",
        "properties": {
          "percent_change": {
            "type": "number",
            "examples": [
              -100
            ]
          },
          "sentiment_1d": {
            "type": "number",
            "examples": [
              0
            ]
          },
          "sentiment_30d": {
            "type": "number",
            "examples": [
              0.099
            ]
          },
          "sentiment_7d": {
            "type": "number",
            "examples": [
              0.118
            ]
          },
          "sentiment_90d": {
            "type": "number",
            "examples": [
              0.099
            ]
          }
        }
      },
      "OptionsChain": {
        "title": "OptionsChain",
        "type": "object",
        "properties": {
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormattedOptionsContractrepresentsaflattenedoptionscontractstructure."
            },
            "description": ""
          },
          "current_price": {
            "type": "number",
            "examples": [
              196.41
            ]
          },
          "expiration_dates": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "examples": [
              [
                "2025-08-15"
              ]
            ]
          },
          "fetch_time": {
            "type": "string",
            "contentEncoding": "date-time",
            "examples": [
              "2025-06-18T19:53:04.356904964Z"
            ]
          },
          "max_pain": {
            "type": "number",
            "examples": [
              200
            ]
          },
          "put_call_ratio": {
            "type": "number",
            "examples": [
              0.828481026386283
            ]
          },
          "ticker": {
            "type": "string",
            "examples": [
              "AAPL"
            ]
          },
          "total_contracts": {
            "type": "integer",
            "contentEncoding": "int64",
            "examples": [
              1
            ]
          }
        }
      },
      "OptionsFilterRanges": {
        "title": "OptionsFilterRanges",
        "type": "object",
        "properties": {
          "breakEvenPrice": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterRange"
              },
              {
                "description": "FilterRange represents min/max values for a numeric field"
              }
            ]
          },
          "currentPrice": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterRange"
              },
              {
                "description": "FilterRange represents min/max values for a numeric field"
              }
            ]
          },
          "delta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterRange"
              },
              {
                "description": "FilterRange represents min/max values for a numeric field"
              }
            ]
          },
          "gamma": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterRange"
              },
              {
                "description": "FilterRange represents min/max values for a numeric field"
              }
            ]
          },
          "impliedVolatility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterRange"
              },
              {
                "description": "FilterRange represents min/max values for a numeric field"
              }
            ]
          },
          "maxExpirationDate": {
            "type": "string",
            "examples": [
              "2025-07-25"
            ]
          },
          "minExpirationDate": {
            "type": "string",
            "examples": [
              "2025-07-03"
            ]
          },
          "openInterest": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterRange"
              },
              {
                "description": "FilterRange represents min/max values for a numeric field"
              }
            ]
          },
          "priceChange": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterRange"
              },
              {
                "description": "FilterRange represents min/max values for a numeric field"
              }
            ]
          },
          "priceChangePercentage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterRange"
              },
              {
                "description": "FilterRange represents min/max values for a numeric field"
              }
            ]
          },
          "strikePrice": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterRange"
              },
              {
                "description": "FilterRange represents min/max values for a numeric field"
              }
            ]
          },
          "theta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterRange"
              },
              {
                "description": "FilterRange represents min/max values for a numeric field"
              }
            ]
          },
          "totalContracts": {
            "type": "integer",
            "contentEncoding": "int64",
            "examples": [
              290
            ]
          },
          "vega": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterRange"
              },
              {
                "description": "FilterRange represents min/max values for a numeric field"
              }
            ]
          },
          "volume": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterRange"
              },
              {
                "description": "FilterRange represents min/max values for a numeric field"
              }
            ]
          }
        },
        "description": "OptionsFilterRanges contains min/max values for all filterable fields"
      },
      "PerformanceData": {
        "title": "PerformanceData",
        "type": "object",
        "properties": {
          "best_performer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PerformerInfo"
              },
              {}
            ]
          },
          "daily_standard_deviation": {
            "type": "number"
          },
          "other_performers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PerformerInfo"
            },
            "description": ""
          },
          "total_daily_gain": {
            "type": "number"
          },
          "total_daily_gain_perc": {
            "type": "number"
          },
          "total_gain": {
            "type": "number"
          },
          "total_gain_perc": {
            "type": "number"
          },
          "total_value": {
            "type": "number"
          },
          "volatility": {
            "type": "number"
          },
          "worst_performer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PerformerInfo"
              },
              {}
            ]
          }
        }
      },
      "PerformerInfo": {
        "title": "PerformerInfo",
        "type": "object",
        "properties": {
          "percent_change": {
            "type": "number"
          },
          "ticker": {
            "type": "string"
          }
        }
      },
      "PeriodBlock": {
        "title": "PeriodBlock",
        "type": "object",
        "properties": {
          "date_estimate_published": {
            "type": "string",
            "examples": [
              "2021-01-01"
            ]
          },
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "PriceForecastItemrepresentsasinglepriceforecastforaticker.": {
        "title": "PriceForecastItemrepresentsasinglepriceforecastforaticker.",
        "type": "object",
        "properties": {
          "current_price": {
            "type": "number",
            "examples": [
              195.72
            ]
          },
          "current_price_timestamp": {
            "type": "string",
            "examples": [
              "2025-06-18 14:54:20"
            ]
          },
          "date": {
            "type": "string",
            "examples": [
              "2025-06-18"
            ]
          },
          "date_of_price_used": {
            "type": "string",
            "examples": [
              "2025-06-18"
            ]
          },
          "predicted_price": {
            "type": "number",
            "examples": [
              195.72
            ]
          },
          "prediction_percent_diff": {
            "type": "string",
            "examples": [
              "1.23"
            ]
          },
          "price_used_for_prediction": {
            "type": "number",
            "examples": [
              195.72
            ]
          },
          "ticker": {
            "type": "string",
            "examples": [
              "AAPL"
            ]
          }
        }
      },
      "RiskAnalysisScores": {
        "title": "RiskAnalysisScores",
        "type": "object",
        "properties": {
          "analysis": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Analysis"
              },
              {}
            ]
          },
          "current_events_risk_factors": {
            "type": "string",
            "examples": [
              "75"
            ]
          },
          "news_risk_factor": {
            "type": "string",
            "examples": [
              "70"
            ]
          },
          "overall_risk": {
            "type": "string",
            "examples": [
              "75"
            ]
          },
          "price_movement_risk_factors": {
            "type": "string",
            "examples": [
              "65"
            ]
          }
        }
      },
      "ScreenerResult": {
        "title": "ScreenerResult",
        "type": "object",
        "properties": {
          "matching_tickers": {
            "type": "array",
            "items": {},
            "description": "List of matching tickers with their metric values\nEach object contains the ticker symbol, report_date, and the values for requested metrics"
          },
          "total_tickers": {
            "type": "integer",
            "description": "Total number of tickers evaluated",
            "contentEncoding": "int64"
          }
        }
      },
      "SkeletonNewsArticle": {
        "title": "SkeletonNewsArticle",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "examples": [
              "f229ecb06b0c32b98e52519c51ee6ec1a01279e2a62f2288399f5a59ed8177b6"
            ]
          },
          "image_url": {
            "type": "string",
            "examples": [
              "https://assets.bwbx.io/images/users/iqjWHBFdfxIU/iNPdNm9msB_k/v0/1200x800.jpg"
            ]
          },
          "market_impact_score": {
            "type": "number",
            "examples": [
              0.9
            ]
          },
          "published_at": {
            "type": "string",
            "examples": [
              "2025-06-18 13:40:48"
            ]
          },
          "sentiment_label": {
            "type": "string",
            "examples": [
              "extremely negative"
            ]
          },
          "sentiment_score": {
            "type": "number",
            "examples": [
              -0.9
            ]
          },
          "source": {
            "type": "string",
            "examples": [
              "Bloomberg"
            ]
          },
          "summary": {
            "type": "string",
            "examples": [
              "The UN nuclear watchdog, IAEA, reports that the location of Iran's 409-kilogram stockpile of near-bomb-grade enriched uranium..."
            ]
          },
          "themes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "examples": [
              [
                "Geopolitics & War",
                "Sanctions & Export Controls",
                "Energy Markets & Prices"
              ]
            ]
          },
          "tickers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TickerItem"
            },
            "description": ""
          },
          "title": {
            "type": "string",
            "examples": [
              "Iran Near-Bomb-Grade Uranium's Location Uncertain, UN Watchdog Says"
            ]
          },
          "url": {
            "type": "string",
            "examples": [
              "https://www.bloomberg.com/news/articles/2025-06-18/iran-nuclear-infrastructure-location-of-enriched-uranium-stocks-uncertain"
            ]
          }
        }
      },
      "StockData": {
        "title": "StockData",
        "type": "object",
        "properties": {
          "change": {
            "type": "number",
            "examples": [
              1.31700000000001
            ]
          },
          "change_percent": {
            "type": "number",
            "examples": [
              0.673175219791457
            ]
          },
          "previous_day": {
            "type": "number",
            "examples": [
              195.64
            ]
          },
          "price": {
            "type": "number",
            "examples": [
              196.957
            ]
          }
        }
      },
      "StockSplitsData": {
        "title": "StockSplitsData",
        "type": "object",
        "properties": {
          "execution_date": {
            "type": "string",
            "examples": [
              "2022-08-25"
            ]
          },
          "split_from": {
            "type": "integer",
            "contentEncoding": "int64",
            "examples": [
              1
            ]
          },
          "split_to": {
            "type": "integer",
            "contentEncoding": "int64",
            "examples": [
              3
            ]
          },
          "ticker": {
            "type": "string",
            "examples": [
              "TSLA"
            ]
          }
        }
      },
      "NewTopMarketStocksServicecreatesanewinstanceofTopMarketStocksService.": {
        "title": "NewTopMarketStocksServicecreatesanewinstanceofTopMarketStocksService.",
        "type": "object",
        "properties": {
          "change_pct": {
            "type": "number",
            "examples": [
              1
            ]
          },
          "close_price": {
            "type": "number",
            "examples": [
              100
            ]
          },
          "open_price": {
            "type": "number",
            "examples": [
              100
            ]
          },
          "symbol": {
            "type": "string",
            "examples": [
              "AAPL"
            ]
          },
          "total_volume": {
            "type": "integer",
            "contentEncoding": "int32",
            "examples": [
              1000000
            ]
          }
        }
      },
      "TickerInfo": {
        "title": "TickerInfo",
        "type": "object",
        "properties": {
          "avgPrice": {
            "type": "number"
          },
          "isIndex": {
            "type": "boolean"
          },
          "numShares": {
            "type": "integer",
            "contentEncoding": "int64"
          },
          "ticker": {
            "type": "string"
          }
        }
      },
      "TickerItem": {
        "title": "TickerItem",
        "type": "object",
        "properties": {
          "company_name": {
            "type": "string"
          },
          "ticker": {
            "type": "string"
          }
        }
      },
      "TickerProfile": {
        "title": "TickerProfile",
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "examples": [
              true
            ]
          },
          "cik": {
            "type": "string",
            "examples": [
              "0000320193"
            ]
          },
          "currency": {
            "type": "string",
            "examples": [
              "usd"
            ]
          },
          "description": {
            "type": "string",
            "examples": [
              "Apple is among the largest companies in the world, ...."
            ]
          },
          "future_earnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "examples": [
              [
                "2026-04-29",
                "2026-01-28",
                "2025-10-29",
                "2025-08-07"
              ]
            ]
          },
          "locale": {
            "type": "string",
            "examples": [
              "us"
            ]
          },
          "market": {
            "type": "string",
            "examples": [
              "stocks"
            ]
          },
          "name": {
            "type": "string",
            "examples": [
              "Apple Inc."
            ]
          },
          "related_tickers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "examples": [
              [
                "MSFT",
                "GOOGL",
                "AMZN",
                "GOOG",
                "NVDA",
                "TSLA",
                "META",
                "NFLX",
                "DIS",
                "BRK.B"
              ]
            ]
          },
          "share_class_shares_outstanding": {
            "type": "integer",
            "contentEncoding": "int64",
            "examples": [
              0
            ]
          },
          "ticker": {
            "type": "string",
            "examples": [
              "AAPL"
            ]
          },
          "weighted_shares_outstanding": {
            "type": "integer",
            "contentEncoding": "int64",
            "examples": [
              14935826000
            ]
          }
        }
      },
      "TradeData": {
        "title": "TradeData",
        "type": "object",
        "properties": {
          "price": {
            "type": "number",
            "examples": [
              195.72
            ]
          },
          "timestamp": {
            "type": "string",
            "examples": [
              "2025-06-18 14:54:20"
            ]
          }
        },
        "description": "TradeData represents individual trade data from the sorted set"
      },
      "TradesDataResponse": {
        "title": "TradesDataResponse",
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "contentEncoding": "int64",
            "examples": [
              100
            ]
          },
          "symbol": {
            "type": "string",
            "examples": [
              "AAPL"
            ]
          },
          "trades": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TradeData"
            },
            "description": ""
          }
        }
      },
      "TreasuryRatesData": {
        "title": "TreasuryRatesData",
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "examples": [
              "2025-03-17"
            ]
          },
          "month1": {
            "type": "number",
            "examples": [
              4.37
            ]
          },
          "month2": {
            "type": "number",
            "examples": [
              4.33
            ]
          },
          "month3": {
            "type": "number",
            "examples": [
              4.34
            ]
          },
          "month6": {
            "type": "number",
            "examples": [
              4.29
            ]
          },
          "year1": {
            "type": "number",
            "examples": [
              4.11
            ]
          },
          "year10": {
            "type": "number",
            "examples": [
              4.31
            ]
          },
          "year2": {
            "type": "number",
            "examples": [
              4.06
            ]
          },
          "year20": {
            "type": "number",
            "examples": [
              4.64
            ]
          },
          "year3": {
            "type": "number",
            "examples": [
              4.03
            ]
          },
          "year30": {
            "type": "number",
            "examples": [
              4.6
            ]
          },
          "year5": {
            "type": "number",
            "examples": [
              4.11
            ]
          },
          "year7": {
            "type": "number",
            "examples": [
              4.21
            ]
          }
        },
        "description": "TreasuryRatesData represents treasury rates for a single date"
      },
      "VolumeCluster": {
        "title": "VolumeCluster",
        "type": "object",
        "properties": {
          "price": {
            "type": "number",
            "examples": [
              195.07
            ]
          },
          "volume": {
            "type": "integer",
            "contentEncoding": "int32",
            "examples": [
              201
            ]
          }
        }
      },
      "WatchlistData": {
        "title": "WatchlistData",
        "type": "object",
        "properties": {
          "indexes": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/WatchlistTickerData"
            }
          },
          "performance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PerformanceData"
              },
              {}
            ]
          },
          "stocks": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/WatchlistTickerData"
            }
          }
        }
      },
      "WatchlistTickerData": {
        "title": "WatchlistTickerData",
        "type": "object",
        "properties": {
          "average_cost": {
            "type": "number"
          },
          "current_day_info": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrentDayInfo"
              },
              {}
            ]
          },
          "current_price": {
            "type": "number"
          },
          "days_change": {
            "type": "number"
          },
          "days_change_perc": {
            "type": "number"
          },
          "extra_info": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ExtraInfo"
              },
              {}
            ]
          },
          "full_name": {
            "type": "string"
          },
          "historical_data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DailyRowData"
            },
            "description": ""
          },
          "shares": {
            "type": "integer",
            "contentEncoding": "int64"
          },
          "total_gain": {
            "type": "number"
          },
          "total_gain_perc": {
            "type": "number"
          }
        }
      },
      "ScreenRequest": {
        "title": "ScreenRequest",
        "required": [
          "criteria",
          "period",
          "cutoff_date"
        ],
        "type": "object",
        "properties": {
          "criteria": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterCriteria"
            },
            "description": "List of filter criteria to apply to stocks"
          },
          "period": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Period"
              },
              {
                "description": "Period type for screening (QUARTERLY or ANNUAL)"
              }
            ]
          },
          "cutoff_date": {
            "type": "string",
            "description": "Cut-off date in ISO format (YYYY-MM-DD or YYYY-MM-DDTHH:MM:SS)"
          }
        }
      },
      "contract_type": {
        "title": "contract_type",
        "enum": [
          "call",
          "put",
          "both"
        ],
        "type": "string"
      },
      "interval": {
        "title": "interval",
        "enum": [
          "minute",
          "hour",
          "day",
          "week",
          "month",
          "quarter",
          "year"
        ],
        "type": "string"
      },
      "money_status": {
        "title": "money_status",
        "enum": [
          "ITM",
          "OTM",
          "ATM",
          "ALL"
        ],
        "type": "string"
      },
      "Operator": {
        "title": "Operator",
        "enum": [
          "=",
          ">=",
          "<",
          "<=",
          ">",
          "!="
        ],
        "type": "string",
        "description": "The comparison operator (>=, <=, ==, !=, >, <)"
      },
      "Period": {
        "title": "Period",
        "enum": [
          "QUARTERLY",
          "ANNUAL"
        ],
        "type": "string",
        "description": "Period type for screening (QUARTERLY or ANNUAL)"
      },
      "period1": {
        "title": "period1",
        "enum": [
          "ANN",
          "QTR",
          "BOTH"
        ],
        "type": "string"
      },
      "period2": {
        "title": "period2",
        "enum": [
          "QUARTERLY",
          "ANNUAL",
          "ALL"
        ],
        "type": "string"
      },
      "type": {
        "title": "type",
        "enum": [
          "gainers",
          "losers",
          "active"
        ],
        "type": "string"
      },
      "watchlistDataRequest": {
        "title": "watchlistDataRequest",
        "type": "object",
        "properties": {
          "tickers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of ticker symbols"
          },
          "start_date": {
            "type": "string",
            "description": "Start date in YYYY-MM-DD format",
            "contentEncoding": "date"
          },
          "end_date": {
            "type": "string",
            "description": "End date in YYYY-MM-DD format",
            "contentEncoding": "date"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "bigtable",
      "description": ""
    },
    {
      "name": "prices",
      "description": ""
    },
    {
      "name": "darkpool",
      "description": ""
    },
    {
      "name": "watchlist",
      "description": ""
    },
    {
      "name": "events",
      "description": ""
    },
    {
      "name": "institutional-holdings",
      "description": ""
    },
    {
      "name": "fundamentals",
      "description": ""
    },
    {
      "name": "marketSentiment",
      "description": ""
    },
    {
      "name": "market",
      "description": ""
    },
    {
      "name": "options",
      "description": ""
    },
    {
      "name": "forecasts",
      "description": ""
    },
    {
      "name": "stockScreener",
      "description": ""
    },
    {
      "name": "analysis",
      "description": ""
    },
    {
      "name": "tickers",
      "description": ""
    },
    {
      "name": "treasury-rates",
      "description": ""
    }
  ]
}