{
    "openapi": "3.0.0",
    "info": {
        "description": "Documentation of the Market Data API.",
        "title": "Market Data API.",
        "contact": {
            "name": "API Support",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "http://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api-keys": {
            "get": {
                "description": "Retrieves all API keys associated with the specified user ID.",
                "tags": [
                    "apiKeys"
                ],
                "summary": "List all API keys for a user",
                "operationId": "listAPIKeys",
                "parameters": [
                    {
                        "x-go-name": "UserID",
                        "description": "The user ID to list API keys for",
                        "name": "user_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/APIKeyResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            },
            "post": {
                "description": "Creates a new API key with the specified name and permissions for the given user.",
                "tags": [
                    "apiKeys"
                ],
                "summary": "Create a new API key",
                "operationId": "createAPIKey",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAPIKeyRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CreateAPIKeyResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            }
        },
        "/api-keys/{key}": {
            "delete": {
                "description": "Deletes the specified API key.",
                "tags": [
                    "apiKeys"
                ],
                "summary": "Delete an API key",
                "operationId": "deleteAPIKey",
                "parameters": [
                    {
                        "x-go-name": "Key",
                        "description": "The API key to delete",
                        "name": "key",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/NoContent"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            }
        },
        "/bigtable/chat/{rowKey}": {
            "get": {
                "description": "Retrieves the chat history for the specified row key from BigTable.",
                "tags": [
                    "bigtableFunctions"
                ],
                "summary": "Get chat history from BigTable.",
                "operationId": "getChatHistory",
                "parameters": [
                    {
                        "x-go-name": "RowKey",
                        "description": "The row key to get chat history from",
                        "name": "rowKey",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ChatHistoryResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            },
            "post": {
                "description": "Creates a new chat conversation with the specified messages at the given row key.",
                "tags": [
                    "bigtableFunctions"
                ],
                "summary": "Create a new chat in BigTable.",
                "operationId": "createChat",
                "parameters": [
                    {
                        "x-go-name": "RowKey",
                        "description": "The row key to create chat at",
                        "name": "rowKey",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/CreateChatResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            },
            "delete": {
                "description": "Removes the specified row from the chat table in BigTable. The operation\nis idempotent - attempting to delete a non-existent key will still return\na successful response.",
                "tags": [
                    "bigtableFunctions"
                ],
                "summary": "Delete a chat key from BigTable.",
                "operationId": "deleteChatKey",
                "parameters": [
                    {
                        "x-go-name": "RowKey",
                        "description": "The row key to delete from the chat table",
                        "name": "rowKey",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/NoContentResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            }
        },
        "/current-price/{symbol}": {
            "get": {
                "description": "This will retrieve the most recent trade data for the specified stock symbol including\ncurrent price, bid/ask prices, trade size, and other market data from Redis.",
                "tags": [
                    "prices"
                ],
                "summary": "Get current price and trading data for a stock symbol",
                "operationId": "getLastTradePrice",
                "parameters": [
                    {
                        "x-go-name": "Symbol",
                        "description": "The stock symbol",
                        "name": "symbol",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CurrentPriceResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            }
        },
        "/darkpool-trends": {
            "get": {
                "description": "Retrieves the top K darkpool trends based on the provided count and start date.\nData is fetched from cache if available, otherwise from the primary service.",
                "tags": [
                    "priceData"
                ],
                "summary": "Get top K darkpool trends.",
                "operationId": "getDarkpoolTrends",
                "parameters": [
                    {
                        "description": "Number of darkpool trends to return.",
                        "name": "k",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Start date for fetching trends (YYYY-MM-DD).",
                        "name": "start",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/DarkpoolTrendsResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            }
        },
        "/darkpool/daily/{ticker}": {
            "get": {
                "description": "Retrieves daily darkpool trend metrics for the specified ticker within the given date range.\nIf no dates are provided, defaults to the last 30 days.",
                "tags": [
                    "priceData"
                ],
                "summary": "Get daily darkpool trends for a specific ticker.",
                "operationId": "getDailyDarkpoolTrend",
                "parameters": [
                    {
                        "description": "The ticker symbol to fetch trends for.",
                        "name": "ticker",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Start date for fetching trends (YYYY-MM-DD).",
                        "name": "start_date",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "End date for fetching trends (YYYY-MM-DD).",
                        "name": "end_date",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/DailyDarkpoolTrendResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            }
        },
        "/darkpools": {
            "get": {
                "description": "Retrieves dark-pool trades in the requested date window with optional\nprice/size/value filters and consolidation.\nIf the query matches the pre-cached slice (last 10 days, default filters) the\nresult is served from Redis; otherwise it falls back to Bigtable.\nCurrent price is attached in parallel.",
                "tags": [
                    "darkpool"
                ],
                "summary": "Get dark-pool trades for a ticker.",
                "operationId": "getDarkpoolTrades",
                "parameters": [
                    {
                        "x-go-name": "Ticker",
                        "description": "The stock ticker symbol",
                        "name": "ticker",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "x-go-name": "Start",
                        "description": "Start date in YYYY-MM-DD format",
                        "name": "start",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "x-go-name": "End",
                        "description": "End date in YYYY-MM-DD format",
                        "name": "end",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "x-go-name": "Limit",
                        "description": "Maximum number of trades to return",
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "default": 1000
                        }
                    },
                    {
                        "x-go-name": "MinSize",
                        "description": "Minimum trade size",
                        "name": "min_size",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "x-go-name": "MaxSize",
                        "description": "Maximum trade size",
                        "name": "max_size",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "x-go-name": "MinPrice",
                        "description": "Minimum trade price",
                        "name": "min_price",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "x-go-name": "MaxPrice",
                        "description": "Maximum trade price",
                        "name": "max_price",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "x-go-name": "MinValue",
                        "description": "Minimum trade value",
                        "name": "min_value",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "x-go-name": "MaxValue",
                        "description": "Maximum trade value",
                        "name": "max_value",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/DarkpoolTradeResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            }
        },
        "/darkpools/daily-summary": {
            "get": {
                "description": "Retrieves a day-by-day breakdown of darkpool trades showing weighted average price,\ntotal daily trade value, and trade volume. Data is fetched directly from Bigtable\nas we need raw unconsolidated trades for accurate calculations.",
                "tags": [
                    "darkpool"
                ],
                "summary": "Get daily weighted average summary of dark-pool trades.",
                "operationId": "getDarkpoolDailySummary",
                "parameters": [
                    {
                        "x-go-name": "Ticker",
                        "description": "The stock ticker symbol",
                        "name": "ticker",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "x-go-name": "Start",
                        "description": "Start date in YYYY-MM-DD format",
                        "name": "start",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "x-go-name": "End",
                        "description": "End date in YYYY-MM-DD format",
                        "name": "end",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/DarkpoolDailySummaryResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            }
        },
        "/dashboard/watchlist/{watchlist_id}": {
            "get": {
                "description": "Retrieves the tickers or data associated with a specific dashboard watchlist ID.",
                "tags": [
                    "priceData"
                ],
                "summary": "Fetch a dashboard watchlist.",
                "operationId": "getDashboardWatchlist",
                "parameters": [
                    {
                        "description": "ID of the watchlist to retrieve.",
                        "name": "watchlist_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/DashboardWatchlistResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            }
        },
        "/earnings": {
            "get": {
                "description": "Retrieves earnings data for the upcoming week from the cache.",
                "tags": [
                    "events-calendar"
                ],
                "summary": "Get earnings data for next week",
                "operationId": "getEarningsNextWeek",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EarningsResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            }
        },
        "/entity-holdings": {
            "get": {
                "description": "Retrieves holdings data for a specific entity, with optional filtering by ticker symbol and date range.\nReturns enriched holdings data including fund names, entity names, and ticker symbols.",
                "tags": [
                    "institutional-holdings"
                ],
                "summary": "Get entity holdings data.",
                "operationId": "getEntityHoldings",
                "parameters": [
                    {
                        "x-go-name": "FundID",
                        "description": "Fund ID to fetch holdings for",
                        "name": "fund_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Entity ID to fetch holdings for",
                        "name": "entity_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Ticker symbol to filter holdings for",
                        "name": "ticker",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Start date in YYYY-MM-DD format",
                        "name": "start",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "description": "End date in YYYY-MM-DD format",
                        "name": "end",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "description": "Maximum number of records to return",
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EntityHoldingsResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            }
        },
        "/estimates/ltg/{ticker}": {
            "get": {
                "description": "Retrieves Long-Term Growth (LTG) estimate data for a given stock ticker.\nAn optional cutOff date can be provided to retrieve data as of that date.",
                "tags": [
                    "EstimatesData"
                ],
                "summary": "Get Long-Term Growth (LTG) estimates for a ticker.",
                "operationId": "getLongTermGrowthEstimate",
                "parameters": [
                    {
                        "description": "Stock ticker symbol.",
                        "name": "ticker",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional cut-off date (e.g., 'YYYY-MM-DD') to retrieve estimates as of a specific date.",
                        "name": "cutOff",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EstimatesResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            }
        },
        "/estimates/metrics/{ticker}/{period}": {
            "get": {
                "description": "Retrieves the most recent estimate metrics (e.g., EPS, Sales) for a given stock ticker,\nfor a specified period type (ANN, QTR, or BOTH).\nAn optional cutOff date can be provided to retrieve data as of that date.",
                "tags": [
                    "EstimatesData"
                ],
                "summary": "Get most recent estimate metrics for a ticker and period.",
                "operationId": "getEstimatesMetrics",
                "parameters": [
                    {
                        "description": "Stock ticker symbol.",
                        "name": "ticker",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Reporting period type.",
                        "name": "period",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ANN",
                                "QTR",
                                "BOTH"
                            ]
                        }
                    },
                    {
                        "description": "Optional cut-off date (e.g., 'YYYY-MM-DD') to retrieve estimates as of a specific date.",
                        "name": "cutOff",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EstimatesResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            }
        },
        "/estimates/pricetarget/{ticker}": {
            "get": {
                "description": "Retrieves price target estimate data for a given stock ticker.\nAn optional cutOff date can be provided to retrieve data as of that date.",
                "tags": [
                    "EstimatesData"
                ],
                "summary": "Get price target estimates for a ticker.",
                "operationId": "getPriceTargetEstimate",
                "parameters": [
                    {
                        "description": "Stock ticker symbol.",
                        "name": "ticker",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional cut-off date (e.g., 'YYYY-MM-DD') to retrieve estimates as of a specific date.",
                        "name": "cutOff",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EstimatesResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            }
        },
        "/fear-greed": {
            "get": {
                "description": "Retrieves the historical Fear & Greed Index data. It attempts to fetch\nthe data from the cache first (Redis). If the cache is missed or an error\noccurs during cache retrieval, it falls back to fetching the data directly\nfrom the source.",
                "tags": [
                    "marketSentiment"
                ],
                "summary": "Get the Fear & Greed Index data.",
                "operationId": "getFearGreedIndex",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/FearGreedResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            }
        },
        "/filing-details/{accession_number}": {
            "get": {
                "description": "Retrieves the full text of an SEC filing using its accession number.\nThe full text of the filing is returned.",
                "tags": [
                    "filings"
                ],
                "summary": "Get SEC filing details by accession number.",
                "operationId": "getFilingDetails",
                "parameters": [
                    {
                        "description": "The accession number of the SEC filing.",
                        "name": "accession_number",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved filing details.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            }
        },
        "/filings/{cik}": {
            "get": {
                "description": "Retrieves a list of SEC filings for a given Company Identifier (CIK) with optional filtering by form type.\nData is retrieved from the cache (Redis) if available, otherwise from the primary source.",
                "tags": [
                    "filings"
                ],
                "summary": "Get SEC filings for a CIK.",
                "operationId": "getFilings",
                "parameters": [
                    {
                        "description": "The CIK (Central Index Key) of the company.",
                        "name": "cik",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional: Filter filings by form type (e.g., '10-K', '10-Q').",
                        "name": "form_type",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/FilingsResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            }
        },
        "/institutional-holdings": {
            "get": {
                "description": "Retrieves aggregated institutional holdings data, with optional filtering by ticker symbol and date range.\nReturns enriched holdings data including fund names, entity names, and ticker symbols.",
                "tags": [
                    "institutional-holdings"
                ],
                "summary": "Get aggregated institutional holdings data.",
                "operationId": "getInstitutionalHoldings",
                "parameters": [
                    {
                        "x-go-name": "Ticker",
                        "description": "Ticker symbol to filter holdings for",
                        "name": "ticker",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Start date in YYYY-MM-DD format",
                        "name": "start",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "description": "End date in YYYY-MM-DD format",
                        "name": "end",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "description": "Maximum number of records to return",
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/InstitutionalHoldingsResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            }
        },
        "/institutional-ownership/changes/{ticker}": {
            "get": {
                "description": "Retrieves the most recent institutional ownership changes for a given ticker symbol from Bigtable.",
                "tags": [
                    "institutional-holdings"
                ],
                "summary": "Get institutional ownership changes for a ticker.",
                "operationId": "getInstitutionalOwnershipChanges",
                "parameters": [
                    {
                        "description": "The stock ticker symbol.",
                        "name": "ticker",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/InstitutionalOwnershipChangesResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            }
        },
        "/news/{ticker}": {
            "get": {
                "description": "Retrieves news articles for the specified stock ticker, with optional filters for date range and limit.\nNews articles are retrieved from the cache (Redis) if available, otherwise from the primary service.",
                "tags": [
                    "news"
                ],
                "summary": "Get news articles for a stock ticker.",
                "operationId": "getNews",
                "parameters": [
                    {
                        "description": "The stock ticker symbol.",
                        "name": "ticker",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Start date for news articles (YYYY-MM-DD).",
                        "name": "start_date",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "description": "End date for news articles (YYYY-MM-DD).",
                        "name": "end_date",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "description": "Maximum number of news articles to return.",
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/NewsResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            }
        },
        "/open-interest/{ticker}": {
            "get": {
                "description": "Retrieves open interest data for a given ticker, with optional filters for expiry and strike prices.\nIf no expiry or strike price is provided, it defaults to all available data.",
                "tags": [
                    "open-interest"
                ],
                "summary": "Get open interest data for a ticker.",
                "operationId": "getOpenInterest",
                "parameters": [
                    {
                        "description": "The stock ticker symbol.",
                        "name": "ticker",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional: Expiry date in YYYY-MM-DD format.",
                        "name": "expiry",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "description": "Optional: Strike price.",
                        "name": "strike",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OpenInterestResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            }
        },
        "/options/{ticker}/expiries": {
            "get": {
                "description": "Retrieves the list of available expiry dates for options of a given ticker from Bigtable.\nIf no expiry dates are found, returns an empty list.",
                "tags": [
                    "options"
                ],
                "summary": "Get options expiry dates for a ticker.",
                "operationId": "getOptionsExpiries",
                "parameters": [
                    {
                        "description": "The stock ticker symbol.",
                        "name": "ticker",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OptionExpiriesResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            }
        },
        "/options/{ticker}/strikes/{expiry}": {
            "get": {
                "description": "Retrieves the list of available strike prices for options of a given ticker and expiry from Bigtable.\nIf no strike prices are found, returns an empty list.",
                "tags": [
                    "options"
                ],
                "summary": "Get options strike prices for a ticker and expiry.",
                "operationId": "getOptionsStrikes",
                "parameters": [
                    {
                        "description": "The stock ticker symbol.",
                        "name": "ticker",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The expiry date for options in YYYY-MM-DD format.",
                        "name": "expiry",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OptionStrikesResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            }
        },
        "/realtime-trades/{symbol}": {
            "get": {
                "description": "Establishes a WebSocket connection to stream real-time trade data for a specified stock symbol.\nThis endpoint supports streaming real-time trade updates including price, size, and timestamp.",
                "tags": [
                    "prices"
                ],
                "summary": "Stream real-time trades for a stock symbol.",
                "operationId": "streamRealtimeTrades",
                "parameters": [
                    {
                        "description": "The stock symbol for real-time trade streaming.",
                        "name": "symbol",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "101": {
                        "description": "Switching Protocols - WebSocket handshake successful."
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            }
        },
        "/symbols": {
            "get": {
                "description": "Retrieves a list of available stock symbols.",
                "tags": [
                    "symbols"
                ],
                "summary": "List all available stock symbols.",
                "operationId": "listSymbols",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SymbolsResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            }
        },
        "/tickers/{cik}": {
            "get": {
                "description": "Retrieves the ticker symbol(s) associated with a given CIK (Company Identifier).\nData is retrieved from the cache (Redis) if available, otherwise from the primary source.",
                "tags": [
                    "symbols"
                ],
                "summary": "Get ticker symbols for a CIK.",
                "operationId": "getTickersByCik",
                "parameters": [
                    {
                        "description": "The CIK (Central Index Key) of the company.",
                        "name": "cik",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/TickersResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            }
        },
        "/trade-volume/{symbol}": {
            "get": {
                "description": "Retrieves historical trade volume data for a specified stock symbol.\nIt can filter by a specified date range and retrieve data from Redis.",
                "tags": [
                    "prices"
                ],
                "summary": "Get trade volume data for a stock symbol.",
                "operationId": "getTradeVolume",
                "parameters": [
                    {
                        "x-go-name": "Symbol",
                        "description": "The stock symbol",
                        "name": "symbol",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "x-go-name": "Start",
                        "description": "Start date in YYYY-MM-DD format",
                        "name": "start",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "x-go-name": "End",
                        "description": "End date in YYYY-MM-DD format",
                        "name": "end",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/TradeVolumeResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            }
        },
        "/trading-halt-history/{symbol}": {
            "get": {
                "description": "Retrieves the trading halt history for a specified stock symbol from Bigtable.\nIf no history is found, returns an empty array.",
                "tags": [
                    "trade-halts"
                ],
                "summary": "Get trading halt history for a symbol.",
                "operationId": "getTradingHaltHistory",
                "parameters": [
                    {
                        "description": "The stock symbol to retrieve halt history for.",
                        "name": "symbol",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/TradingHaltHistoryResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            }
        },
        "/trading-halts": {
            "get": {
                "description": "Retrieves current trading halts from the cache.\nIt returns an array of currently halted symbols.",
                "tags": [
                    "trade-halts"
                ],
                "summary": "Get current trading halts.",
                "operationId": "getTradingHalts",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/TradingHaltsResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            }
        },
        "/tweets/{ticker}": {
            "get": {
                "description": "Retrieves the most recent tweets for a specified stock ticker from the cache.\nTweets are returned in reverse chronological order.",
                "tags": [
                    "social-sentiment"
                ],
                "summary": "Get recent tweets for a stock ticker.",
                "operationId": "getTweets",
                "parameters": [
                    {
                        "description": "The stock ticker symbol.",
                        "name": "ticker",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/TweetsResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            }
        },
        "/unusual-options-activity/{ticker}": {
            "get": {
                "description": "Retrieves the most recent unusual options activity for a given ticker from Bigtable.\nIf no unusual options activity is found, returns an empty array.",
                "tags": [
                    "options"
                ],
                "summary": "Get unusual options activity for a ticker.",
                "operationId": "getUnusualOptionsActivity",
                "parameters": [
                    {
                        "description": "The stock ticker symbol.",
                        "name": "ticker",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/UnusualOptionsActivityResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            }
        },
        "/vix": {
            "get": {
                "description": "Retrieves the historical VIX (Volatility Index) data from Bigtable.\nIf no data is found, returns an empty array.",
                "tags": [
                    "marketSentiment"
                ],
                "summary": "Get historical VIX data.",
                "operationId": "getVIXData",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/VIXResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "APIKey": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier of the API key."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the API key."
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of permissions associated with the API key."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp when the API key was created."
                    },
                    "last_used_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp when the API key was last used."
                    }
                }
            },
            "APIKeyResponse": {
                "type": "object",
                "properties": {
                    "api_keys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/APIKey"
                        },
                        "description": "List of API keys."
                    }
                }
            },
            "ChatHistory": {
                "type": "object",
                "properties": {
                    "rowKey": {
                        "type": "string",
                        "description": "The row key identifier for the chat history."
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of messages in the chat history."
                    }
                }
            },
            "ChatHistoryResponse": {
                "type": "object",
                "properties": {
                    "chat_history": {
                        "$ref": "#/components/schemas/ChatHistory",
                        "description": "The retrieved chat history."
                    }
                }
            },
            "CreateAPIKeyRequest": {
                "type": "object",
                "required": [
                    "name",
                    "user_id"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name for the new API key."
                    },
                    "user_id": {
                        "type": "string",
                        "description": "The user ID to associate the API key with."
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of permissions to grant to the API key."
                    }
                }
            },
            "CreateAPIKeyResponse": {
                "type": "object",
                "properties": {
                    "api_key": {
                        "type": "string",
                        "description": "The newly created API key."
                    },
                    "api_key_id": {
                        "type": "string",
                        "description": "The ID of the newly created API key."
                    }
                }
            },
            "CreateChatRequest": {
                "type": "object",
                "required": [
                    "messages"
                ],
                "properties": {
                    "messages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of messages to be stored in the chat."
                    }
                }
            },
            "CreateChatResponse": {
                "type": "object",
                "properties": {
                    "rowKey": {
                        "type": "string",
                        "description": "The row key where the chat was created."
                    },
                    "message": {
                        "type": "string",
                        "description": "Confirmation message."
                    }
                }
            },
            "CurrentPrice": {
                "type": "object",
                "properties": {
                    "symbol": {
                        "type": "string",
                        "description": "The stock ticker symbol."
                    },
                    "price": {
                        "type": "number",
                        "format": "double",
                        "description": "The current price of the stock."
                    },
                    "bid": {
                        "type": "number",
                        "format": "double",
                        "description": "The current bid price."
                    },
                    "ask": {
                        "type": "number",
                        "format": "double",
                        "description": "The current ask price."
                    },
                    "bid_size": {
                        "type": "integer",
                        "description": "The size of the current bid."
                    },
                    "ask_size": {
                        "type": "integer",
                        "description": "The size of the current ask."
                    },
                    "volume": {
                        "type": "integer",
                        "description": "The current trading volume."
                    },
                    "last_trade_size": {
                        "type": "integer",
                        "description": "The size of the last trade."
                    },
                    "last_trade_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of the last trade."
                    }
                }
            },
            "CurrentPriceResponse": {
                "type": "object",
                "properties": {
                    "current_price": {
                        "$ref": "#/components/schemas/CurrentPrice",
                        "description": "The current price and trading data."
                    }
                }
            },
            "DailyDarkpoolTrend": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date of the darkpool trend."
                    },
                    "total_shares": {
                        "type": "integer",
                        "description": "Total shares traded in dark pools for the day."
                    },
                    "total_value": {
                        "type": "number",
                        "format": "double",
                        "description": "Total value of shares traded in dark pools for the day."
                    },
                    "average_trade_size": {
                        "type": "number",
                        "format": "double",
                        "description": "Average trade size for the day."
                    }
                }
            },
            "DailyDarkpoolTrendResponse": {
                "type": "object",
                "properties": {
                    "ticker": {
                        "type": "string",
                        "description": "The ticker symbol."
                    },
                    "daily_trends": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DailyDarkpoolTrend"
                        },
                        "description": "List of daily darkpool trends."
                    }
                }
            },
            "DarkpoolDailySummary": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date for the summary."
                    },
                    "weighted_average_price": {
                        "type": "number",
                        "format": "double",
                        "description": "Weighted average price of trades for the day."
                    },
                    "total_value": {
                        "type": "number",
                        "format": "double",
                        "description": "Total value of trades for the day."
                    },
                    "total_volume": {
                        "type": "integer",
                        "description": "Total volume of trades for the day."
                    }
                }
            },
            "DarkpoolDailySummaryResponse": {
                "type": "object",
                "properties": {
                    "ticker": {
                        "type": "string",
                        "description": "The ticker symbol."
                    },
                    "daily_summary": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DarkpoolDailySummary"
                        },
                        "description": "List of daily darkpool summaries."
                    }
                }
            },
            "DarkpoolTrade": {
                "type": "object",
                "properties": {
                    "trade_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp of the trade."
                    },
                    "price": {
                        "type": "number",
                        "format": "double",
                        "description": "Price of the trade."
                    },
                    "size": {
                        "type": "integer",
                        "description": "Size of the trade."
                    },
                    "value": {
                        "type": "number",
                        "format": "double",
                        "description": "Value of the trade (price * size)."
                    },
                    "is_consolidated": {
                        "type": "boolean",
                        "description": "True if the trade is a consolidated trade."
                    }
                }
            },
            "DarkpoolTradeResponse": {
                "type": "object",
                "properties": {
                    "ticker": {
                        "type": "string",
                        "description": "The ticker symbol."
                    },
                    "current_price": {
                        "type": "number",
                        "format": "double",
                        "description": "The current price of the ticker."
                    },
                    "trades": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DarkpoolTrade"
                        },
                        "description": "List of darkpool trades."
                    }
                }
            },
            "DarkpoolTrendsResponse": {
                "type": "object",
                "properties": {
                    "start_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The start date for the trends."
                    },
                    "top_trends": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "ticker": {
                                    "type": "string",
                                    "description": "The ticker symbol."
                                },
                                "total_value": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "Total darkpool trade value for the ticker."
                                }
                            }
                        },
                        "description": "List of top darkpool trends."
                    }
                }
            },
            "DashboardWatchlist": {
                "type": "object",
                "properties": {
                    "watchlist_id": {
                        "type": "string",
                        "description": "The ID of the watchlist."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the watchlist."
                    },
                    "tickers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of ticker symbols in the watchlist."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp when the watchlist was created."
                    },
                    "last_updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp when the watchlist was last updated."
                    }
                }
            },
            "DashboardWatchlistResponse": {
                "type": "object",
                "properties": {
                    "watchlist": {
                        "$ref": "#/components/schemas/DashboardWatchlist",
                        "description": "The retrieved dashboard watchlist."
                    }
                }
            },
            "Earnings": {
                "type": "object",
                "properties": {
                    "symbol": {
                        "type": "string",
                        "description": "The stock ticker symbol."
                    },
                    "company_name": {
                        "type": "string",
                        "description": "The name of the company."
                    },
                    "report_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date the earnings are expected to be reported."
                    },
                    "estimate_eps": {
                        "type": "number",
                        "format": "double",
                        "description": "Estimated Earnings Per Share (EPS)."
                    },
                    "actual_eps": {
                        "type": "number",
                        "format": "double",
                        "description": "Actual Earnings Per Share (EPS)."
                    }
                }
            },
            "EarningsResponse": {
                "type": "object",
                "properties": {
                    "earnings_next_week": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Earnings"
                        },
                        "description": "List of earnings reports for the upcoming week."
                    }
                }
            },
            "EntityHolding": {
                "type": "object",
                "properties": {
                    "fund_id": {
                        "type": "string",
                        "description": "Unique identifier for the fund."
                    },
                    "fund_name": {
                        "type": "string",
                        "description": "Name of the fund."
                    },
                    "entity_id": {
                        "type": "string",
                        "description": "Unique identifier for the entity (e.g., institution)."
                    },
                    "entity_name": {
                        "type": "string",
                        "description": "Name of the entity."
                    },
                    "ticker": {
                        "type": "string",
                        "description": "Ticker symbol of the holding."
                    },
                    "holding_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date of the holding."
                    },
                    "shares_held": {
                        "type": "integer",
                        "description": "Number of shares held."
                    },
                    "market_value": {
                        "type": "number",
                        "format": "double",
                        "description": "Market value of the holding."
                    },
                    "change_in_shares": {
                        "type": "integer",
                        "description": "Change in shares from the previous period."
                    }
                }
            },
            "EntityHoldingsResponse": {
                "type": "object",
                "properties": {
                    "holdings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EntityHolding"
                        },
                        "description": "List of entity holdings."
                    }
                }
            },
            "Error": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Error code."
                    },
                    "message": {
                        "type": "string",
                        "description": "Error message."
                    }
                }
            },
            "ErrorResponse": {
                "type": "object",
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/Error",
                        "description": "Error details."
                    }
                }
            },
            "EstimatesData": {
                "type": "object",
                "properties": {
                    "ticker": {
                        "type": "string",
                        "description": "The stock ticker symbol."
                    },
                    "metric_type": {
                        "type": "string",
                        "description": "The type of estimate metric (e.g., 'EPS', 'SALES', 'LTG', 'PRICETARGET')."
                    },
                    "period_type": {
                        "type": "string",
                        "description": "The reporting period type (e.g., 'ANN', 'QTR', 'BOTH')."
                    },
                    "estimates": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "date": {
                                    "type": "string",
                                    "format": "date",
                                    "description": "Date of the estimate."
                                },
                                "value": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "Estimated value."
                                },
                                "actual_value": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "Actual reported value (if available)."
                                }
                            }
                        },
                        "description": "List of estimate data points."
                    },
                    "cut_off_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date as of which the estimates were retrieved, if a cutOff was specified."
                    }
                }
            },
            "EstimatesResponse": {
                "type": "object",
                "properties": {
                    "estimates_data": {
                        "$ref": "#/components/schemas/EstimatesData",
                        "description": "The retrieved estimates data."
                    }
                }
            },
            "FearGreedIndex": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date of the Fear & Greed Index data."
                    },
                    "value": {
                        "type": "integer",
                        "description": "The Fear & Greed Index value (0-100)."
                    },
                    "sentiment": {
                        "type": "string",
                        "description": "The sentiment associated with the index value (e.g., 'Extreme Fear', 'Fear', 'Neutral', 'Greed', 'Extreme Greed')."
                    }
                }
            },
            "FearGreedResponse": {
                "type": "object",
                "properties": {
                    "fear_greed_index": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FearGreedIndex"
                        },
                        "description": "List of historical Fear & Greed Index data."
                    }
                }
            },
            "Filing": {
                "type": "object",
                "properties": {
                    "accession_number": {
                        "type": "string",
                        "description": "The unique accession number for the filing."
                    },
                    "form_type": {
                        "type": "string",
                        "description": "The type of SEC form (e.g., '10-K', '10-Q')."
                    },
                    "filing_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date the filing was submitted."
                    },
                    "report_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date of the period covered by the report."
                    },
                    "description": {
                        "type": "string",
                        "description": "A brief description of the filing."
                    },
                    "file_url": {
                        "type": "string",
                        "format": "url",
                        "description": "URL to the full text of the filing."
                    }
                }
            },
            "FilingsResponse": {
                "type": "object",
                "properties": {
                    "cik": {
                        "type": "string",
                        "description": "The CIK of the company."
                    },
                    "filings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Filing"
                        },
                        "description": "List of SEC filings."
                    }
                }
            },
            "InstitutionalHolding": {
                "type": "object",
                "properties": {
                    "fund_id": {
                        "type": "string",
                        "description": "Unique identifier for the fund."
                    },
                    "fund_name": {
                        "type": "string",
                        "description": "Name of the fund."
                    },
                    "entity_id": {
                        "type": "string",
                        "description": "Unique identifier for the entity (e.g., institution)."
                    },
                    "entity_name": {
                        "type": "string",
                        "description": "Name of the entity."
                    },
                    "ticker": {
                        "type": "string",
                        "description": "Ticker symbol of the holding."
                    },
                    "holding_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date of the holding."
                    },
                    "shares_held": {
                        "type": "integer",
                        "description": "Number of shares held."
                    },
                    "market_value": {
                        "type": "number",
                        "format": "double",
                        "description": "Market value of the holding."
                    },
                    "change_in_shares": {
                        "type": "integer",
                        "description": "Change in shares from the previous period."
                    }
                }
            },
            "InstitutionalHoldingsResponse": {
                "type": "object",
                "properties": {
                    "holdings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InstitutionalHolding"
                        },
                        "description": "List of institutional holdings."
                    }
                }
            },
            "InstitutionalOwnershipChange": {
                "type": "object",
                "properties": {
                    "fund_name": {
                        "type": "string",
                        "description": "Name of the institutional fund."
                    },
                    "change_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date of the ownership change."
                    },
                    "shares_before": {
                        "type": "integer",
                        "description": "Number of shares held before the change."
                    },
                    "shares_after": {
                        "type": "integer",
                        "description": "Number of shares held after the change."
                    },
                    "change_percentage": {
                        "type": "number",
                        "format": "double",
                        "description": "Percentage change in shares held."
                    }
                }
            },
            "InstitutionalOwnershipChangesResponse": {
                "type": "object",
                "properties": {
                    "ticker": {
                        "type": "string",
                        "description": "The stock ticker symbol."
                    },
                    "ownership_changes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InstitutionalOwnershipChange"
                        },
                        "description": "List of institutional ownership changes."
                    }
                }
            },
            "NewsArticle": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "Title of the news article."
                    },
                    "url": {
                        "type": "string",
                        "format": "url",
                        "description": "URL to the full news article."
                    },
                    "published_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp when the article was published."
                    },
                    "source": {
                        "type": "string",
                        "description": "Source of the news article."
                    },
                    "summary": {
                        "type": "string",
                        "description": "A brief summary of the article."
                    }
                }
            },
            "NewsResponse": {
                "type": "object",
                "properties": {
                    "ticker": {
                        "type": "string",
                        "description": "The ticker symbol."
                    },
                    "news_articles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NewsArticle"
                        },
                        "description": "List of news articles."
                    }
                }
            },
            "NoContent": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Success message indicating no content."
                    }
                }
            },
            "NoContentResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Confirmation message indicating successful deletion with no content returned."
                    }
                }
            },
            "OpenInterestData": {
                "type": "object",
                "properties": {
                    "expiry_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The expiry date of the option."
                    },
                    "strike_price": {
                        "type": "number",
                        "format": "double",
                        "description": "The strike price of the option."
                    },
                    "call_open_interest": {
                        "type": "integer",
                        "description": "Open interest for call options."
                    },
                    "put_open_interest": {
                        "type": "integer",
                        "description": "Open interest for put options."
                    },
                    "total_open_interest": {
                        "type": "integer",
                        "description": "Total open interest for both call and put options."
                    }
                }
            },
            "OpenInterestResponse": {
                "type": "object",
                "properties": {
                    "ticker": {
                        "type": "string",
                        "description": "The ticker symbol."
                    },
                    "open_interest_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OpenInterestData"
                        },
                        "description": "List of open interest data."
                    }
                }
            },
            "OptionExpiriesResponse": {
                "type": "object",
                "properties": {
                    "ticker": {
                        "type": "string",
                        "description": "The stock ticker symbol."
                    },
                    "expiries": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "date"
                        },
                        "description": "List of available expiry dates."
                    }
                }
            },
            "OptionStrikesResponse": {
                "type": "object",
                "properties": {
                    "ticker": {
                        "type": "string",
                        "description": "The stock ticker symbol."
                    },
                    "expiry": {
                        "type": "string",
                        "format": "date",
                        "description": "The expiry date for which strike prices are returned."
                    },
                    "strikes": {
                        "type": "array",
                        "items": {
                            "type": "number",
                            "format": "double"
                        },
                        "description": "List of available strike prices."
                    }
                }
            },
            "SymbolsResponse": {
                "type": "object",
                "properties": {
                    "symbols": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of available stock symbols."
                    }
                }
            },
            "TickerMapping": {
                "type": "object",
                "properties": {
                    "cik": {
                        "type": "string",
                        "description": "The CIK (Central Index Key) of the company."
                    },
                    "ticker": {
                        "type": "string",
                        "description": "The ticker symbol associated with the CIK."
                    },
                    "company_name": {
                        "type": "string",
                        "description": "The name of the company."
                    }
                }
            },
            "TickersResponse": {
                "type": "object",
                "properties": {
                    "ticker_mappings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TickerMapping"
                        },
                        "description": "List of ticker mappings for the given CIK."
                    }
                }
            },
            "TradeVolume": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date of the trade volume."
                    },
                    "volume": {
                        "type": "integer",
                        "description": "The total trade volume for the day."
                    },
                    "average_price": {
                        "type": "number",
                        "format": "double",
                        "description": "The average price of trades for the day."
                    }
                }
            },
            "TradeVolumeResponse": {
                "type": "object",
                "properties": {
                    "symbol": {
                        "type": "string",
                        "description": "The stock ticker symbol."
                    },
                    "trade_volume": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TradeVolume"
                        },
                        "description": "List of historical trade volume data."
                    }
                }
            },
            "TradingHalt": {
                "type": "object",
                "properties": {
                    "symbol": {
                        "type": "string",
                        "description": "The stock ticker symbol."
                    },
                    "halt_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp when the trading halt began."
                    },
                    "resume_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp when trading resumed (if applicable)."
                    },
                    "reason": {
                        "type": "string",
                        "description": "Reason for the trading halt (e.g., 'News Pending', 'Circuit Breaker')."
                    },
                    "is_active": {
                        "type": "boolean",
                        "description": "True if the trading halt is currently active."
                    }
                }
            },
            "TradingHaltHistoryResponse": {
                "type": "object",
                "properties": {
                    "symbol": {
                        "type": "string",
                        "description": "The stock ticker symbol."
                    },
                    "halt_history": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TradingHalt"
                        },
                        "description": "List of trading halt history records."
                    }
                }
            },
            "TradingHaltsResponse": {
                "type": "object",
                "properties": {
                    "trading_halts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TradingHalt"
                        },
                        "description": "List of currently active trading halts."
                    }
                }
            },
            "Tweet": {
                "type": "object",
                "properties": {
                    "tweet_id": {
                        "type": "string",
                        "description": "Unique identifier for the tweet."
                    },
                    "text": {
                        "type": "string",
                        "description": "The content of the tweet."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp when the tweet was created."
                    },
                    "retweet_count": {
                        "type": "integer",
                        "description": "Number of retweets."
                    },
                    "like_count": {
                        "type": "integer",
                        "description": "Number of likes."
                    },
                    "author_id": {
                        "type": "string",
                        "description": "ID of the tweet author."
                    }
                }
            },
            "TweetsResponse": {
                "type": "object",
                "properties": {
                    "ticker": {
                        "type": "string",
                        "description": "The stock ticker symbol."
                    },
                    "tweets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tweet"
                        },
                        "description": "List of recent tweets for the ticker."
                    }
                }
            },
            "UnusualOptionsActivity": {
                "type": "object",
                "properties": {
                    "option_type": {
                        "type": "string",
                        "description": "Type of option (Call or Put)."
                    },
                    "expiry_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Expiry date of the option."
                    },
                    "strike_price": {
                        "type": "number",
                        "format": "double",
                        "description": "Strike price of the option."
                    },
                    "trade_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp of the unusual trade."
                    },
                    "volume": {
                        "type": "integer",
                        "description": "Volume of the unusual trade."
                    },
                    "open_interest": {
                        "type": "integer",
                        "description": "Open interest at the time of the trade."
                    },
                    "sentiment": {
                        "type": "string",
                        "description": "Implied sentiment (e.g., 'Bullish', 'Bearish', 'Neutral')."
                    }
                }
            },
            "UnusualOptionsActivityResponse": {
                "type": "object",
                "properties": {
                    "ticker": {
                        "type": "string",
                        "description": "The stock ticker symbol."
                    },
                    "unusual_activity": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UnusualOptionsActivity"
                        },
                        "description": "List of unusual options activity records."
                    }
                }
            },
            "VIXData": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date of the VIX data."
                    },
                    "value": {
                        "type": "number",
                        "format": "double",
                        "description": "The VIX closing value for the day."
                    },
                    "change": {
                        "type": "number",
                        "format": "double",
                        "description": "The change in VIX value from the previous day."
                    },
                    "change_percentage": {
                        "type": "number",
                        "format": "double",
                        "description": "The percentage change in VIX value from the previous day."
                    }
                }
            },
            "VIXResponse": {
                "type": "object",
                "properties": {
                    "vix_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VIXData"
                        },
                        "description": "List of historical VIX data."
                    }
                }
            }
        },
        "responses": {
            "APIKeyResponse": {
                "description": "A list of API keys.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/APIKeyResponse"
                        }
                    }
                }
            },
            "ChatHistoryResponse": {
                "description": "Chat history for the specified row key.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ChatHistoryResponse"
                        }
                    }
                }
            },
            "CreateAPIKeyResponse": {
                "description": "The newly created API key details.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/CreateAPIKeyResponse"
                        }
                    }
                }
            },
            "CreateChatResponse": {
                "description": "Confirmation of chat creation.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/CreateChatResponse"
                        }
                    }
                }
            },
            "CurrentPriceResponse": {
                "description": "Current price and trading data for the stock symbol.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/CurrentPriceResponse"
                        }
                    }
                }
            },
            "DailyDarkpoolTrendResponse": {
                "description": "Daily darkpool trends for a specific ticker.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/DailyDarkpoolTrendResponse"
                        }
                    }
                }
            },
            "DarkpoolDailySummaryResponse": {
                "description": "Daily weighted average summary of dark-pool trades.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/DarkpoolDailySummaryResponse"
                        }
                    }
                }
            },
            "DarkpoolTradeResponse": {
                "description": "List of dark-pool trades for a ticker.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/DarkpoolTradeResponse"
                        }
                    }
                }
            },
            "DarkpoolTrendsResponse": {
                "description": "Top K darkpool trends.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/DarkpoolTrendsResponse"
                        }
                    }
                }
            },
            "DashboardWatchlistResponse": {
                "description": "A dashboard watchlist.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/DashboardWatchlistResponse"
                        }
                    }
                }
            },
            "EarningsResponse": {
                "description": "Earnings data for the upcoming week.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/EarningsResponse"
                        }
                    }
                }
            },
            "EntityHoldingsResponse": {
                "description": "Entity holdings data.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/EntityHoldingsResponse"
                        }
                    }
                }
            },
            "ErrorResponse": {
                "description": "Error response.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorResponse"
                        }
                    }
                }
            },
            "EstimatesResponse": {
                "description": "Estimates data for a ticker.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/EstimatesResponse"
                        }
                    }
                }
            },
            "FearGreedResponse": {
                "description": "Historical Fear & Greed Index data.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/FearGreedResponse"
                        }
                    }
                }
            },
            "FilingsResponse": {
                "description": "List of SEC filings.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/FilingsResponse"
                        }
                    }
                }
            },
            "InstitutionalHoldingsResponse": {
                "description": "Aggregated institutional holdings data.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/InstitutionalHoldingsResponse"
                        }
                    }
                }
            },
            "InstitutionalOwnershipChangesResponse": {
                "description": "Institutional ownership changes for a ticker.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/InstitutionalOwnershipChangesResponse"
                        }
                    }
                }
            },
            "NewsResponse": {
                "description": "News articles for a stock ticker.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/NewsResponse"
                        }
                    }
                }
            },
            "NoContent": {
                "description": "No content.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/NoContent"
                        }
                    }
                }
            },
            "NoContentResponse": {
                "description": "Successful deletion with no content.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/NoContentResponse"
                        }
                    }
                }
            },
            "OpenInterestResponse": {
                "description": "Open interest data for a ticker.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/OpenInterestResponse"
                        }
                    }
                }
            },
            "OptionExpiriesResponse": {
                "description": "List of available option expiry dates.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/OptionExpiriesResponse"
                        }
                    }
                }
            },
            "OptionStrikesResponse": {
                "description": "List of available option strike prices.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/OptionStrikesResponse"
                        }
                    }
                }
            },
            "SymbolsResponse": {
                "description": "List of available stock symbols.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/SymbolsResponse"
                        }
                    }
                }
            },
            "TickersResponse": {
                "description": "List of ticker symbols for a CIK.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/TickersResponse"
                        }
                    }
                }
            },
            "TradeVolumeResponse": {
                "description": "Historical trade volume data for a stock symbol.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/TradeVolumeResponse"
                        }
                    }
                }
            },
            "TradingHaltHistoryResponse": {
                "description": "Trading halt history for a symbol.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/TradingHaltHistoryResponse"
                        }
                    }
                }
            },
            "TradingHaltsResponse": {
                "description": "Current trading halts.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/TradingHaltsResponse"
                        }
                    }
                }
            },
            "TweetsResponse": {
                "description": "Recent tweets for a stock ticker.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/TweetsResponse"
                        }
                    }
                }
            },
            "UnusualOptionsActivityResponse": {
                "description": "Unusual options activity for a ticker.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/UnusualOptionsActivityResponse"
                        }
                    }
                }
            },
            "VIXResponse": {
                "description": "Historical VIX data.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/VIXResponse"
                        }
                    }
                }
            }
        }
    }
}
