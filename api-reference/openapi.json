{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Documentation of the Market Data API.",
    "title": "Market Data API.",
    "contact": {
      "name": "API Support",
      "email": "support@example.com"
    },
    "license": {
      "name": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    },
    "version": "1.0.0"
  },
  "host": "api.go.useallmind.ai",
  "basePath": "/",
  "paths": {
    "/fundamentals/{ticker}/period/{year}/{period}": {
      "get": {
        "description": "Balance-sheet, cash-flow, income \u0026 ratios for one specific year \u0026 reporting period (FY, Q1â€’Q4).",
        "produces": [
          "application/json"
        ],
        "tags": [
          "fundamentals"
        ],
        "summary": "Get financials for a single ticker for a specific period",
        "operationId": "getFinancialsPeriod",
        "parameters": [
          {
            "type": "string",
            "description": "The ticker to fetch",
            "name": "ticker",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The year",
            "name": "year",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The period",
            "name": "period",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/FinancialsPeriodResponse"
          },
          "400": {
            "$ref": "#/responses/ErrorResponse"
          },
          "404": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/news/sentiment/{ticker}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "marketSentiment"
        ],
        "summary": "Get sentiment scores for a ticker.",
        "operationId": "getTickerSentiment30D",
        "parameters": [
          {
            "type": "string",
            "description": "Stock ticker symbol (e.g., AAPL, TSLA)",
            "name": "ticker",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/TickerSentimentResponse"
          },
          "400": {
            "$ref": "#/responses/ErrorResponse"
          },
          "404": {
            "$ref": "#/responses/ErrorResponse"
          },
          "500": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/news/{id}": {
      "get": {
        "description": "Retrieves a news article by its unique ID.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "marketSentiment"
        ],
        "summary": "Get a news article by ID.",
        "operationId": "getNewsArticle",
        "parameters": [
          {
            "type": "string",
            "description": "Unique ID of the news article",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/NewsResponse"
          },
          "400": {
            "$ref": "#/responses/ErrorResponse"
          },
          "404": {
            "$ref": "#/responses/ErrorResponse"
          },
          "500": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/stock-screener/screen": {
      "post": {
        "description": "Filters stocks based on the provided financial criteria and returns\nmatching ticker symbols. The screening is performed against historical\nfinancial data up to the specified cutoff date.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "stockScreener"
        ],
        "summary": "Screen stocks based on financial criteria.",
        "operationId": "screenStocks",
        "parameters": [
          {
            "x-go-name": "Body",
            "description": "Request body for stock screening",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScreenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ScreenResponse"
          },
          "400": {
            "$ref": "#/responses/ErrorResponse"
          },
          "500": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    }
  },
  "definitions": {
    "APIKey": {
      "description": "APIKey represents an API key with its metadata",
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedAt",
          "example": "2021-01-01T00:00:00Z"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID",
          "example": "123e4567-e89b-12d3-a456-426614174000"
        },
        "key": {
          "type": "string",
          "x-go-name": "Key",
          "example": "123e4567-e89b-12d3-a456-426614174000"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name",
          "example": "My API Key"
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Permissions",
          "example": [
            "read",
            "write"
          ]
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "AggregatedData": {
      "type": "object",
      "title": "AggregatedData represents aggregated historical data.",
      "properties": {
        "close": {
          "type": "number",
          "format": "double",
          "x-go-name": "Close",
          "example": 201.7
        },
        "high": {
          "type": "number",
          "format": "double",
          "x-go-name": "High",
          "example": 202.13
        },
        "low": {
          "type": "number",
          "format": "double",
          "x-go-name": "Low",
          "example": 200.12
        },
        "open": {
          "type": "number",
          "format": "double",
          "x-go-name": "Open",
          "example": 200.28
        },
        "symbol": {
          "type": "string",
          "x-go-name": "Symbol",
          "example": "AAPL"
        },
        "transactions": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Transactions",
          "example": 501431
        },
        "volume": {
          "type": "number",
          "format": "double",
          "x-go-name": "Volume",
          "example": 35423294
        },
        "vwap": {
          "type": "number",
          "format": "double",
          "x-go-name": "VolumeWeighted",
          "example": 201.2063
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "Analysis": {
      "type": "object",
      "properties": {
        "current_events_analysis": {
          "type": "string",
          "x-go-name": "CurrentEventsAnalysis",
          "example": "The current events landscape for 2025-06-18 is dominated by high-impact communications from the Federal Reserve, ..."
        },
        "news_analysis": {
          "type": "string",
          "x-go-name": "NewsAnalysis",
          "example": "The news summary for 2025-06-18 underscores a market environment characterized by uncertainty and a high potential for volatility, primarily driven by the scheduled FOMC monetary policy decision and Chair Powell's press conference..."
        },
        "overall_risk_analysis": {
          "type": "string",
          "x-go-name": "OverallRiskAnalysis",
          "example": "The overall market risk for 2025-06-18 is assessed as 75, placing it in the 'High Risk / Volatile' category..."
        },
        "price_data_analysis": {
          "type": "string",
          "x-go-name": "PriceDataAnalysis",
          "example": "No explicit price data (Dark Pools, Options, Treasuries, Tickers) was provided for 2025-06-18..."
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "AnalysisResults": {
      "description": "AnalysisResults contains the results of Fibonacci and Camarilla analysis",
      "type": "object",
      "properties": {
        "camarilla_levels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CamarillaLevel"
          },
          "x-go-name": "CamarillaLevels"
        },
        "fibonacci_levels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FibonacciRetractmentLevel"
          },
          "x-go-name": "FibonacciLevels"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "CamarillaLevel": {
      "description": "CamarillaLevel stores a Camarilla pivot point",
      "type": "object",
      "properties": {
        "level": {
          "type": "string",
          "x-go-name": "Level",
          "example": "H1"
        },
        "value": {
          "type": "number",
          "format": "double",
          "x-go-name": "Value",
          "example": 195.496875
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "ChatHistory": {
      "type": "object",
      "properties": {
        "chatName": {
          "type": "string",
          "x-go-name": "ChatName",
          "example": "My Chat"
        },
        "history": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChatMessage"
          },
          "x-go-name": "History"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "ChatMessage": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "x-go-name": "Content",
          "example": "Hello, how are you?"
        },
        "files": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Files",
          "example": [
            "file1.txt",
            "file2.txt"
          ]
        },
        "role": {
          "type": "string",
          "x-go-name": "Role",
          "example": "user"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "CombinedOutput": {
      "type": "object",
      "properties": {
        "annual": {
          "$ref": "#/definitions/PeriodBlock"
        },
        "quarterly": {
          "$ref": "#/definitions/PeriodBlock"
        },
        "ticker": {
          "type": "string",
          "x-go-name": "Ticker"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "CurrentDayInfo": {
      "type": "object",
      "properties": {
        "close": {
          "type": "number",
          "format": "double",
          "x-go-name": "Close"
        },
        "high": {
          "type": "number",
          "format": "double",
          "x-go-name": "High"
        },
        "low": {
          "type": "number",
          "format": "double",
          "x-go-name": "Low"
        },
        "open": {
          "type": "number",
          "format": "double",
          "x-go-name": "Open"
        },
        "todays_change": {
          "type": "number",
          "format": "double",
          "x-go-name": "TodaysChange"
        },
        "todays_change_perc": {
          "type": "number",
          "format": "double",
          "x-go-name": "TodaysChangePerc"
        },
        "volume": {
          "type": "number",
          "format": "double",
          "x-go-name": "Volume"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "CurrentPrice": {
      "type": "object",
      "properties": {
        "ask_price": {
          "type": "number",
          "format": "double",
          "x-go-name": "AskPrice",
          "example": 195.74
        },
        "ask_size": {
          "type": "integer",
          "format": "uint32",
          "x-go-name": "AskSize",
          "example": 100
        },
        "bid_price": {
          "type": "number",
          "format": "double",
          "x-go-name": "BidPrice",
          "example": 195.72
        },
        "bid_size": {
          "type": "integer",
          "format": "uint32",
          "x-go-name": "BidSize",
          "example": 200
        },
        "change_percentage": {
          "type": "number",
          "format": "double",
          "x-go-name": "ChangePercentage",
          "example": 0.0029
        },
        "dollar_change": {
          "type": "number",
          "format": "double",
          "x-go-name": "DollarChange",
          "example": 0.56
        },
        "previous_close": {
          "type": "number",
          "format": "double",
          "x-go-name": "PreviousClose",
          "example": 195.16
        },
        "price": {
          "type": "number",
          "format": "double",
          "x-go-name": "Price",
          "example": 195.72
        },
        "sequence": {
          "type": "integer",
          "format": "uint32",
          "x-go-name": "Sequence",
          "example": 164525600
        },
        "side": {
          "type": "string",
          "x-go-name": "Side",
          "example": "Bid"
        },
        "symbol": {
          "type": "string",
          "x-go-name": "Symbol",
          "example": "AAPL"
        },
        "timestamp": {
          "type": "string",
          "x-go-name": "Timestamp",
          "example": "2025-06-18 14:54:20"
        },
        "trade_size": {
          "type": "integer",
          "format": "uint32",
          "x-go-name": "TradeSize",
          "example": 200
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "DailyRowData": {
      "description": "DailyRowData represents daily historical price data from Financial Modeling Prep API",
      "type": "object",
      "properties": {
        "close": {
          "type": "number",
          "format": "double",
          "x-go-name": "Close"
        },
        "high": {
          "type": "number",
          "format": "double",
          "x-go-name": "High"
        },
        "low": {
          "type": "number",
          "format": "double",
          "x-go-name": "Low"
        },
        "open": {
          "type": "number",
          "format": "double",
          "x-go-name": "Open"
        },
        "symbol": {
          "type": "string",
          "x-go-name": "Symbol"
        },
        "ts_event": {
          "type": "string",
          "x-go-name": "TsEvent"
        },
        "volume": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Volume"
        },
        "vwap": {
          "type": "number",
          "format": "double",
          "x-go-name": "VWAP"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "DailyVolume": {
      "description": "DailyVolume represents daily volume data",
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "x-go-name": "Date"
        },
        "volume": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Volume"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "DarkpoolDailySummary": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "Date"
        },
        "ticker": {
          "type": "string",
          "x-go-name": "Ticker"
        },
        "total_daily_value": {
          "type": "number",
          "format": "double",
          "x-go-name": "TotalDailyValue"
        },
        "total_daily_volume": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "TotalDailyVolume"
        },
        "trade_count": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "TradeCount"
        },
        "weighted_average_price": {
          "type": "number",
          "format": "double",
          "x-go-name": "WeightedAveragePrice"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "DarkpoolData": {
      "description": "DarkpoolData represents the structure of darkpool data",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/DarkpoolRecord"
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "DarkpoolMetrics": {
      "description": "DarkpoolMetrics represents the calculated metrics",
      "type": "object",
      "properties": {
        "absolute_growth": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "AbsoluteGrowth"
        },
        "daily_volume": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DailyVolume"
          },
          "x-go-name": "DailyVolume"
        },
        "first_day": {
          "type": "string",
          "x-go-name": "FirstDay"
        },
        "growth_day_over_day": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GrowthData"
          },
          "x-go-name": "GrowthDayOverDay"
        },
        "last_day": {
          "type": "string",
          "x-go-name": "LastDay"
        },
        "message": {
          "type": "string",
          "x-go-name": "Message"
        },
        "overall_growth_percent": {
          "type": "number",
          "format": "double",
          "x-go-name": "OverallGrowthPercent"
        },
        "overall_trend": {
          "type": "string",
          "x-go-name": "OverallTrend"
        },
        "status": {
          "type": "string",
          "x-go-name": "Status"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "DarkpoolRecord": {
      "description": "DarkpoolRecord represents a single darkpool data record",
      "type": "object",
      "properties": {
        "prev_record_date": {
          "type": "string",
          "x-go-name": "PrevRecordDate"
        },
        "prev_volume": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "PrevVolume"
        },
        "record_date": {
          "type": "string",
          "x-go-name": "RecordDate"
        },
        "ticker": {
          "type": "string",
          "x-go-name": "Ticker"
        },
        "total_volume": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "TotalVolume"
        },
        "trend": {
          "type": "string",
          "x-go-name": "Trend"
        },
        "volume_change_percentage": {
          "type": "number",
          "format": "double",
          "x-go-name": "VolumeChangePercentage"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "DarkpoolTrend": {
      "type": "object",
      "required": [
        "ticker",
        "total_volume",
        "prev_volume",
        "total_dollar_volume",
        "prev_dollar_volume",
        "darkpool_ratio",
        "absolute_volume_change",
        "relative_volume_change",
        "record_date",
        "prev_record_date",
        "trend"
      ],
      "properties": {
        "absolute_volume_change": {
          "description": "The percentage change in volume from previous date",
          "type": "integer",
          "format": "int64",
          "x-go-name": "AbsoluteVolumeChange",
          "example": 23
        },
        "darkpool_ratio": {
          "description": "The darkpool/total volume ratio",
          "type": "number",
          "format": "double",
          "x-go-name": "DarkpoolRatio",
          "example": 0.123456789
        },
        "prev_dollar_volume": {
          "description": "The previous day's total dollar volume",
          "type": "number",
          "format": "double",
          "x-go-name": "PrevDollarVolume",
          "example": 1000000
        },
        "prev_record_date": {
          "description": "The date of the previous record",
          "type": "string",
          "x-go-name": "PrevRecordDate",
          "example": "2023-03-11"
        },
        "prev_volume": {
          "description": "The previous day's total volume",
          "type": "integer",
          "format": "int64",
          "x-go-name": "PrevVolume",
          "example": 1000000
        },
        "record_date": {
          "description": "The date of the record in YYYY-MM-DD format",
          "type": "string",
          "x-go-name": "RecordDate",
          "example": "2023-03-12"
        },
        "relative_volume_change": {
          "description": "The percentage change in volume from previous date",
          "type": "number",
          "format": "double",
          "x-go-name": "RelativeVolumeChange",
          "example": 23.45
        },
        "ticker": {
          "description": "The stock ticker symbol",
          "type": "string",
          "x-go-name": "Ticker",
          "example": "AAPL"
        },
        "total_dollar_volume": {
          "description": "The total dollar volume of darkpool trades",
          "type": "number",
          "format": "double",
          "x-go-name": "TotalDollarVolume",
          "example": 1234567.89
        },
        "total_volume": {
          "description": "The total volume of darkpool trades for this ticker on this date",
          "type": "integer",
          "format": "int64",
          "x-go-name": "TotalVolume",
          "example": 1234567
        },
        "trend": {
          "description": "Whether the volume trend is up, down, or flat",
          "type": "string",
          "x-go-name": "Trend",
          "example": "up"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "EarningsData": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "x-go-name": "Date",
          "example": "2025-06-24"
        },
        "symbol": {
          "type": "string",
          "x-go-name": "Symbol",
          "example": "CUK"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "EntityHoldingResponse": {
      "type": "object",
      "properties": {
        "adj_holding": {
          "type": "number",
          "format": "double",
          "x-go-name": "AdjHolding",
          "example": 1000000.5
        },
        "adj_mv": {
          "type": "number",
          "format": "double",
          "x-go-name": "AdjMV",
          "example": 150000000.75
        },
        "entity_name": {
          "type": "string",
          "x-go-name": "EntityName",
          "example": "\"BlackRock Inc.\""
        },
        "report_date": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "ReportDate",
          "example": "\"2024-03-15T00:00:00Z\""
        },
        "reported_holding": {
          "type": "number",
          "format": "double",
          "x-go-name": "ReportedHolding",
          "example": 1000000
        },
        "ticker": {
          "type": "string",
          "x-go-name": "Ticker",
          "example": "\"AAPL\""
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "x-go-name": "Message"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "ExpirationDates": {
      "type": "object",
      "properties": {
        "dates": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Dates"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "ExtraInfo": {
      "type": "object",
      "properties": {
        "highest_price": {
          "type": "number",
          "format": "double",
          "x-go-name": "HighestPrice"
        },
        "lowest_price": {
          "type": "number",
          "format": "double",
          "x-go-name": "LowestPrice"
        },
        "market_cap": {
          "type": "number",
          "format": "double",
          "x-go-name": "MarketCap"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "FearGreedRecord": {
      "type": "object",
      "properties": {
        "average_put_call_option_ratio": {
          "type": "number",
          "format": "double",
          "x-go-name": "AveragePutCallOptionRatio",
          "example": 0.727365952350784
        },
        "date": {
          "type": "string",
          "x-go-name": "Date",
          "example": "2025-06-18"
        },
        "junk_bonds_vs_investment_bonds_spread": {
          "type": "number",
          "format": "double",
          "x-go-name": "JunkBondsVsInvestmentBondsSpread",
          "example": 1.41395557638261
        },
        "market_greed_level": {
          "type": "number",
          "format": "double",
          "x-go-name": "MarketGreedLevel",
          "example": 54.3714285714286
        },
        "market_returns_vs_bonds": {
          "type": "number",
          "format": "double",
          "x-go-name": "MarketReturnsVsBonds",
          "example": 0.9429439178541631
        },
        "market_sentiment": {
          "type": "string",
          "x-go-name": "MarketSentiment",
          "example": "neutral"
        },
        "vix_volatility": {
          "type": "number",
          "format": "double",
          "x-go-name": "VIXVolatility",
          "example": 19.89
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "FetchWatchlistDataRequest": {
      "type": "object",
      "required": [
        "ticker_infos"
      ],
      "properties": {
        "end_date": {
          "description": "The end date for the data range (YYYY-MM-DD).\nin: body\nrequired: false (will use default if not provided)",
          "type": "string",
          "x-go-name": "EndDate"
        },
        "start_date": {
          "description": "The start date for the data range (YYYY-MM-DD).\nin: body\nrequired: false (will use default if not provided)",
          "type": "string",
          "x-go-name": "StartDate"
        },
        "ticker_infos": {
          "description": "A list of ticker symbols for which to fetch data.\nin: body",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TickerInfo"
          },
          "x-go-name": "TickerInfos"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "FibonacciRetractmentLevel": {
      "description": "FibonacciRetractmentLevel stores a Fibonacci retracement level with its ratio and value",
      "type": "object",
      "properties": {
        "ratio": {
          "type": "string",
          "x-go-name": "Ratio",
          "example": "Fib_23.6%"
        },
        "value": {
          "type": "number",
          "format": "double",
          "x-go-name": "Value",
          "example": 204.871
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "FilterCriteria": {
      "type": "object",
      "required": [
        "metric",
        "operator",
        "value"
      ],
      "properties": {
        "metric": {
          "description": "The financial metric to filter on (e.g., \"eps\", \"revenue\", \"current_ratio\")",
          "type": "string",
          "x-go-name": "Metric"
        },
        "operator": {
          "description": "The comparison operator (\u003e=, \u003c=, ==, !=, \u003e, \u003c)",
          "type": "string",
          "x-go-name": "Operator"
        },
        "value": {
          "description": "The value to compare against (can be number or string)",
          "x-go-name": "Value"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "FilterRange": {
      "description": "FilterRange represents min/max values for a numeric field",
      "type": "object",
      "properties": {
        "max": {
          "type": "number",
          "format": "double",
          "x-go-name": "Max"
        },
        "min": {
          "type": "number",
          "format": "double",
          "x-go-name": "Min"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "FinancialsPeriodData": {
      "type": "object",
      "additionalProperties": {},
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "FinancialsRangeData": {
      "type": "object",
      "additionalProperties": {
        "type": "array",
        "items": {
          "type": "object",
          "additionalProperties": {}
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "Footprint": {
      "description": "Volume Footprint",
      "type": "object",
      "properties": {
        "buy_volume": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "BuyVolume",
          "example": 19651096
        },
        "close_price": {
          "type": "number",
          "format": "double",
          "x-go-name": "ClosePrice",
          "example": 195.44
        },
        "delta": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Delta",
          "example": 533698
        },
        "delta_pct": {
          "type": "number",
          "format": "double",
          "x-go-name": "DeltaPct",
          "example": 1.38
        },
        "high_price": {
          "type": "number",
          "format": "double",
          "x-go-name": "HighPrice",
          "example": 207.88
        },
        "imbalances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Imbalance"
          },
          "x-go-name": "Imbalances"
        },
        "low_price": {
          "type": "number",
          "format": "double",
          "x-go-name": "LowPrice",
          "example": 195.07
        },
        "neutral_volume": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "NeutralVolume",
          "example": 0
        },
        "open_price": {
          "type": "number",
          "format": "double",
          "x-go-name": "OpenPrice",
          "example": 198.74
        },
        "poc_price": {
          "type": "number",
          "format": "double",
          "x-go-name": "PocPrice",
          "example": 200
        },
        "poc_volume": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "PocVolume",
          "example": 193614
        },
        "sell_volume": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "SellVolume",
          "example": 19117398
        },
        "symbol": {
          "type": "string",
          "x-go-name": "Symbol",
          "example": "AAPL"
        },
        "value_area_high": {
          "type": "number",
          "format": "double",
          "x-go-name": "ValueAreaHigh",
          "example": 205.1
        },
        "value_area_low": {
          "type": "number",
          "format": "double",
          "x-go-name": "ValueAreaLow",
          "example": 196
        },
        "volume_clusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeCluster"
          },
          "x-go-name": "VolumeClusters"
        },
        "vwap": {
          "type": "number",
          "format": "double",
          "x-go-name": "VWAP",
          "example": 200.5829
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "FormattedOptionsContract": {
      "type": "object",
      "title": "FormattedOptionsContract represents a flattened options contract structure.",
      "properties": {
        "break_even_price": {
          "type": "number",
          "format": "double",
          "x-go-name": "BreakEvenPrice",
          "example": 196.025
        },
        "contract_fair_market_value": {
          "type": "number",
          "format": "double",
          "x-go-name": "ContractFairMarketValue",
          "example": 193.722
        },
        "contract_type": {
          "type": "string",
          "x-go-name": "ContractType",
          "example": "put"
        },
        "current_price": {
          "type": "number",
          "format": "double",
          "x-go-name": "CurrentPrice",
          "example": 193.722
        },
        "day_high": {
          "type": "number",
          "format": "double",
          "x-go-name": "DayHigh",
          "example": 194.861
        },
        "day_low": {
          "type": "number",
          "format": "double",
          "x-go-name": "DayLow",
          "example": 192.406
        },
        "day_open": {
          "type": "number",
          "format": "double",
          "x-go-name": "DayOpen",
          "example": 194.196
        },
        "delta": {
          "type": "number",
          "format": "double",
          "x-go-name": "Delta",
          "example": -0.972133
        },
        "expiration_date": {
          "type": "string",
          "x-go-name": "ExpirationDate",
          "example": "2025-08-15"
        },
        "gamma": {
          "type": "number",
          "format": "double",
          "x-go-name": "Gamma",
          "example": 0.001503
        },
        "implied_volatility": {
          "type": "number",
          "format": "double",
          "x-go-name": "ImpliedVolatility",
          "example": 0.924785
        },
        "money_status": {
          "type": "string",
          "x-go-name": "MoneyStatus",
          "example": "ITM"
        },
        "open_interest": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "OpenInterest",
          "example": 0
        },
        "option_symbol": {
          "type": "string",
          "x-go-name": "OptionSymbol",
          "example": "O:AAPL250815P00390000"
        },
        "previous_close": {
          "type": "number",
          "format": "double",
          "x-go-name": "PreviousClose",
          "example": 177.85
        },
        "price_change": {
          "type": "number",
          "format": "double",
          "x-go-name": "PriceChange",
          "example": 15.872
        },
        "price_change_percentage": {
          "type": "number",
          "format": "double",
          "x-go-name": "PriceChangePercentage",
          "example": 8.924374
        },
        "strike_price": {
          "type": "number",
          "format": "double",
          "x-go-name": "StrikePrice",
          "example": 390
        },
        "theta": {
          "type": "number",
          "format": "double",
          "x-go-name": "Theta",
          "example": -0.025231
        },
        "underlying_price": {
          "type": "number",
          "format": "double",
          "x-go-name": "UnderlyingPrice",
          "example": 196.41
        },
        "underlying_symbol": {
          "type": "string",
          "x-go-name": "UnderlyingSymbol",
          "example": "AAPL"
        },
        "vega": {
          "type": "number",
          "format": "double",
          "x-go-name": "Vega",
          "example": 0.040892
        },
        "volume": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Volume",
          "example": 0
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "FundHoldingResponse": {
      "type": "object",
      "properties": {
        "adj_holding": {
          "type": "number",
          "format": "double",
          "x-go-name": "AdjHolding",
          "example": 1000000.5
        },
        "adj_mv": {
          "type": "number",
          "format": "double",
          "x-go-name": "AdjMV",
          "example": 150000000.75
        },
        "fund_name": {
          "type": "string",
          "x-go-name": "FundName",
          "example": "\"Vanguard Total Stock Market Index Fund\""
        },
        "report_date": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "ReportDate",
          "example": "\"2024-03-15T00:00:00Z\""
        },
        "reported_holding": {
          "type": "number",
          "format": "double",
          "x-go-name": "ReportedHolding",
          "example": 1000000
        },
        "ticker": {
          "type": "string",
          "x-go-name": "Ticker",
          "example": "\"AAPL\""
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "FuturesRowData": {
      "type": "object",
      "properties": {
        "close": {
          "type": "number",
          "format": "double",
          "x-go-name": "Close",
          "example": 195.72
        },
        "date": {
          "type": "string",
          "x-go-name": "Date",
          "example": "2025-06-18"
        },
        "high": {
          "type": "number",
          "format": "double",
          "x-go-name": "High",
          "example": 207.88
        },
        "low": {
          "type": "number",
          "format": "double",
          "x-go-name": "Low",
          "example": 195.44
        },
        "name": {
          "type": "string",
          "x-go-name": "Name",
          "example": "Apple Inc."
        },
        "open": {
          "type": "number",
          "format": "double",
          "x-go-name": "Open",
          "example": 195.72
        },
        "symbol": {
          "type": "string",
          "x-go-name": "Symbol",
          "example": "AAPL"
        },
        "volume": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Volume",
          "example": 19651096
        },
        "vwap": {
          "type": "number",
          "format": "double",
          "x-go-name": "VWAP",
          "example": 200.5829
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "G7EventsData": {
      "type": "object",
      "properties": {
        "country": {
          "type": "string",
          "x-go-name": "Country",
          "example": "CA"
        },
        "date": {
          "type": "string",
          "x-go-name": "Date",
          "example": "2025-06-24"
        },
        "estimate": {
          "type": "number",
          "format": "double",
          "x-go-name": "Estimate",
          "example": 0
        },
        "event": {
          "type": "string",
          "x-go-name": "Event",
          "example": "CPI (May)"
        },
        "impact": {
          "type": "string",
          "x-go-name": "Impact",
          "example": "High"
        },
        "previous": {
          "type": "number",
          "format": "double",
          "x-go-name": "Previous",
          "example": 3.1
        },
        "unit": {
          "type": "string",
          "x-go-name": "Unit",
          "example": "%"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "GrowthData": {
      "description": "GrowthData represents day-over-day growth data",
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "x-go-name": "Date"
        },
        "growth_percent": {
          "type": "number",
          "format": "double",
          "x-go-name": "GrowthPercent"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "HistoricalOptionsData": {
      "type": "object",
      "properties": {
        "adjusted": {
          "type": "boolean",
          "x-go-name": "Adjusted",
          "example": true
        },
        "fetch_time": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "FetchTime",
          "example": "2025-06-18T20:27:16.714618661Z"
        },
        "query_count": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "QueryCount",
          "example": 13
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AggregatedData"
          },
          "x-go-name": "Results",
          "example": "["
        },
        "results_count": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "ResultsCount",
          "example": 13
        },
        "status": {
          "type": "string",
          "x-go-name": "Status",
          "example": "OK"
        },
        "symbol": {
          "type": "string",
          "x-go-name": "Symbol",
          "example": "AAPL"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "HolderInfo": {
      "type": "object",
      "properties": {
        "cik": {
          "description": "CIK (Central Index Key) of the holder",
          "type": "string",
          "x-go-name": "CIK",
          "example": "0000320193"
        },
        "name": {
          "description": "Display name of the holder",
          "type": "string",
          "x-go-name": "Name",
          "example": "BlackRock, Inc."
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "IPOData": {
      "type": "object",
      "properties": {
        "actions": {
          "type": "string",
          "x-go-name": "Actions",
          "example": "Expected"
        },
        "company": {
          "type": "string",
          "x-go-name": "Company",
          "example": "Kandal M Venture Limited"
        },
        "date": {
          "type": "string",
          "x-go-name": "Date",
          "example": "2025-06-24"
        },
        "exchange": {
          "type": "string",
          "x-go-name": "Exchange",
          "example": "NASDAQ"
        },
        "marketCap": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "MarketCap",
          "example": 11500000
        },
        "priceRange": {
          "type": "string",
          "x-go-name": "PriceRange",
          "example": "4.00 - 5.00"
        },
        "shares": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Shares",
          "example": 2000000
        },
        "symbol": {
          "type": "string",
          "x-go-name": "Symbol",
          "example": "FMFC"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "Imbalance": {
      "type": "object",
      "properties": {
        "buy_vol": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "BuyVol",
          "example": 15859
        },
        "price": {
          "type": "number",
          "format": "double",
          "x-go-name": "Price",
          "example": 203.84
        },
        "ratio": {
          "type": "string",
          "x-go-name": "Ratio",
          "example": "2.67"
        },
        "sell_vol": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "SellVol",
          "example": 5947
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "MarketSnapshotItem": {
      "description": "MarketSnapshotItem represents a single ticker item in the market snapshot",
      "type": "object",
      "properties": {
        "current_price": {
          "type": "number",
          "format": "double",
          "x-go-name": "CurrentPrice",
          "example": 19.27
        },
        "dollar_change": {
          "type": "number",
          "format": "double",
          "x-go-name": "DollarChange",
          "example": 0.05000000000000071
        },
        "last_quote_ask_price": {
          "type": "number",
          "format": "double",
          "x-go-name": "LastQuoteAskPrice",
          "example": 19.3
        },
        "last_quote_ask_size": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "LastQuoteAskSize",
          "example": 5
        },
        "last_quote_bid_price": {
          "type": "number",
          "format": "double",
          "x-go-name": "LastQuoteBidPrice",
          "example": 19.17
        },
        "last_quote_bid_size": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "LastQuoteBidSize",
          "example": 5
        },
        "last_trade_price": {
          "type": "number",
          "format": "double",
          "x-go-name": "LastTradePrice",
          "example": 19.22
        },
        "last_trade_size": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "LastTradeSize",
          "example": 100
        },
        "ticker": {
          "type": "string",
          "x-go-name": "Ticker",
          "example": "BLOX"
        },
        "timestamp": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Timestamp",
          "example": 1750260240000
        },
        "todays_change": {
          "type": "number",
          "format": "double",
          "x-go-name": "TodaysChange",
          "example": 0.05059999999999931
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "MarketStatus": {
      "type": "object",
      "properties": {
        "market_open": {
          "type": "boolean",
          "x-go-name": "MarketOpen",
          "example": true
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "MultiPeriodSentimentMetrics": {
      "type": "object",
      "properties": {
        "percent_change": {
          "type": "number",
          "format": "double",
          "x-go-name": "PercentChange",
          "example": -100
        },
        "sentiment_1d": {
          "type": "number",
          "format": "double",
          "x-go-name": "Sentiment1D",
          "example": 0
        },
        "sentiment_30d": {
          "type": "number",
          "format": "double",
          "x-go-name": "Sentiment30D",
          "example": 0.099
        },
        "sentiment_7d": {
          "type": "number",
          "format": "double",
          "x-go-name": "Sentiment7D",
          "example": 0.118
        },
        "sentiment_90d": {
          "type": "number",
          "format": "double",
          "x-go-name": "Sentiment90D",
          "example": 0.099
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "OptionsChain": {
      "type": "object",
      "properties": {
        "contracts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormattedOptionsContract"
          },
          "x-go-name": "Contracts"
        },
        "current_price": {
          "type": "number",
          "format": "double",
          "x-go-name": "CurrentPrice",
          "example": 196.41
        },
        "expiration_dates": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "ExpirationDates",
          "example": [
            "2025-08-15"
          ]
        },
        "fetch_time": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "FetchTime",
          "example": "2025-06-18T19:53:04.356904964Z"
        },
        "max_pain": {
          "type": "number",
          "format": "double",
          "x-go-name": "MaxPain",
          "example": 200
        },
        "put_call_ratio": {
          "type": "number",
          "format": "double",
          "x-go-name": "PutCallRatio",
          "example": 0.8284810263862831
        },
        "ticker": {
          "type": "string",
          "x-go-name": "Ticker",
          "example": "AAPL"
        },
        "total_contracts": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "TotalContracts",
          "example": 1
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "OptionsFilterRanges": {
      "description": "OptionsFilterRanges contains min/max values for all filterable fields",
      "type": "object",
      "properties": {
        "breakEvenPrice": {
          "$ref": "#/definitions/FilterRange"
        },
        "currentPrice": {
          "$ref": "#/definitions/FilterRange"
        },
        "delta": {
          "$ref": "#/definitions/FilterRange"
        },
        "gamma": {
          "$ref": "#/definitions/FilterRange"
        },
        "impliedVolatility": {
          "$ref": "#/definitions/FilterRange"
        },
        "maxExpirationDate": {
          "type": "string",
          "x-go-name": "MaxExpirationDate",
          "example": "2025-07-25"
        },
        "minExpirationDate": {
          "type": "string",
          "x-go-name": "MinExpirationDate",
          "example": "2025-07-03"
        },
        "openInterest": {
          "$ref": "#/definitions/FilterRange"
        },
        "priceChange": {
          "$ref": "#/definitions/FilterRange"
        },
        "priceChangePercentage": {
          "$ref": "#/definitions/FilterRange"
        },
        "strikePrice": {
          "$ref": "#/definitions/FilterRange"
        },
        "theta": {
          "$ref": "#/definitions/FilterRange"
        },
        "totalContracts": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "TotalContracts",
          "example": 290
        },
        "vega": {
          "$ref": "#/definitions/FilterRange"
        },
        "volume": {
          "$ref": "#/definitions/FilterRange"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "PerformanceData": {
      "type": "object",
      "properties": {
        "best_performer": {
          "$ref": "#/definitions/PerformerInfo"
        },
        "daily_standard_deviation": {
          "type": "number",
          "format": "double",
          "x-go-name": "StandardDeviation"
        },
        "other_performers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerformerInfo"
          },
          "x-go-name": "OtherPerformers"
        },
        "total_daily_gain": {
          "type": "number",
          "format": "double",
          "x-go-name": "TotalDailyGain"
        },
        "total_daily_gain_perc": {
          "type": "number",
          "format": "double",
          "x-go-name": "TotalDailyGainPerc"
        },
        "total_gain": {
          "type": "number",
          "format": "double",
          "x-go-name": "TotalGain"
        },
        "total_gain_perc": {
          "type": "number",
          "format": "double",
          "x-go-name": "TotalGainPerc"
        },
        "total_value": {
          "type": "number",
          "format": "double",
          "x-go-name": "TotalValue"
        },
        "volatility": {
          "type": "number",
          "format": "double",
          "x-go-name": "Volatility"
        },
        "worst_performer": {
          "$ref": "#/definitions/PerformerInfo"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "PerformerInfo": {
      "type": "object",
      "properties": {
        "percent_change": {
          "type": "number",
          "format": "double",
          "x-go-name": "PercentChange"
        },
        "ticker": {
          "type": "string",
          "x-go-name": "Ticker"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "PeriodBlock": {
      "type": "object",
      "properties": {
        "date_estimate_published": {
          "type": "string",
          "x-go-name": "DateEstimatePublished",
          "example": "2021-01-01"
        },
        "metrics": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "x-go-name": "Metrics"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "PriceForecastItem": {
      "type": "object",
      "title": "PriceForecastItem represents a single price forecast for a ticker.",
      "properties": {
        "current_price": {
          "type": "number",
          "format": "double",
          "x-go-name": "CurrentPrice",
          "example": 195.72
        },
        "current_price_timestamp": {
          "type": "string",
          "x-go-name": "CurrentPriceTimestamp",
          "example": "2025-06-18 14:54:20"
        },
        "date": {
          "type": "string",
          "x-go-name": "Date",
          "example": "2025-06-18"
        },
        "date_of_price_used": {
          "type": "string",
          "x-go-name": "DateOfPriceUsed",
          "example": "2025-06-18"
        },
        "predicted_price": {
          "type": "number",
          "format": "double",
          "x-go-name": "PredictedPrice",
          "example": 195.72
        },
        "prediction_percent_diff": {
          "type": "string",
          "x-go-name": "PredictionPercentDiff",
          "example": "1.23"
        },
        "price_used_for_prediction": {
          "type": "number",
          "format": "double",
          "x-go-name": "PriceUsedForPrediction",
          "example": 195.72
        },
        "ticker": {
          "type": "string",
          "x-go-name": "Ticker",
          "example": "AAPL"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "RiskAnalysisScores": {
      "type": "object",
      "properties": {
        "analysis": {
          "$ref": "#/definitions/Analysis"
        },
        "current_events_risk_factors": {
          "type": "string",
          "x-go-name": "CurrentEventsRiskFactors",
          "example": "75"
        },
        "news_risk_factor": {
          "type": "string",
          "x-go-name": "NewsRiskFactor",
          "example": "70"
        },
        "overall_risk": {
          "type": "string",
          "x-go-name": "OverallRisk",
          "example": "75"
        },
        "price_movement_risk_factors": {
          "type": "string",
          "x-go-name": "PriceMovementRiskFactors",
          "example": "65"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "ScreenRequest": {
      "type": "object",
      "required": [
        "criteria",
        "period",
        "cutoff_date"
      ],
      "properties": {
        "criteria": {
          "description": "List of filter criteria to apply to stocks",
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/FilterCriteria"
          },
          "x-go-name": "Criteria"
        },
        "cutoff_date": {
          "description": "Cut-off date in ISO format (YYYY-MM-DD or YYYY-MM-DDTHH:MM:SS)",
          "type": "string",
          "x-go-name": "CutoffDate"
        },
        "period": {
          "description": "Period type for screening (QUARTERLY or ANNUAL)",
          "type": "string",
          "x-go-name": "Period"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "ScreenResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/ScreenerResult"
        },
        "error": {
          "description": "Error message if success is false",
          "type": "string",
          "x-go-name": "Error"
        },
        "success": {
          "description": "Indicates if the request was successful",
          "type": "boolean",
          "x-go-name": "Success"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "ScreenerResult": {
      "type": "object",
      "properties": {
        "matching_tickers": {
          "description": "List of matching tickers with their metric values\nEach object contains the ticker symbol, report_date, and the values for requested metrics",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {}
          },
          "x-go-name": "MatchingTickers"
        },
        "total_tickers": {
          "description": "Total number of tickers evaluated",
          "type": "integer",
          "format": "int64",
          "x-go-name": "TotalTickers"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "SearchResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Count"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchResultItem"
          },
          "x-go-name": "Results"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "SearchResultItem": {
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "SkeletonNewsArticle": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-go-name": "Id",
          "example": "f229ecb06b0c32b98e52519c51ee6ec1a01279e2a62f2288399f5a59ed8177b6"
        },
        "image_url": {
          "type": "string",
          "x-go-name": "ImageURL",
          "example": "https://assets.bwbx.io/images/users/iqjWHBFdfxIU/iNPdNm9msB_k/v0/1200x800.jpg"
        },
        "market_impact_score": {
          "type": "number",
          "format": "double",
          "x-go-name": "MarketImpact",
          "example": 0.9
        },
        "published_at": {
          "type": "string",
          "x-go-name": "PublishedAt",
          "example": "2025-06-18 13:40:48"
        },
        "sentiment_label": {
          "type": "string",
          "x-go-name": "SentimentLabel",
          "example": "extremely negative"
        },
        "sentiment_score": {
          "type": "number",
          "format": "double",
          "x-go-name": "SentimentScore",
          "example": -0.9
        },
        "source": {
          "type": "string",
          "x-go-name": "Source",
          "example": "Bloomberg"
        },
        "summary": {
          "type": "string",
          "x-go-name": "Summary",
          "example": "The UN nuclear watchdog, IAEA, reports that the location of Iran's 409-kilogram stockpile of near-bomb-grade enriched uranium..."
        },
        "themes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Themes",
          "example": [
            "Geopolitics \u0026 War",
            "Sanctions \u0026 Export Controls",
            "Energy Markets \u0026 Prices"
          ]
        },
        "tickers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TickerItem"
          },
          "x-go-name": "Tickers",
          "example": null
        },
        "title": {
          "type": "string",
          "x-go-name": "Title",
          "example": "Iran Near-Bomb-Grade Uranium's Location Uncertain, UN Watchdog Says"
        },
        "url": {
          "type": "string",
          "x-go-name": "URL",
          "example": "https://www.bloomberg.com/news/articles/2025-06-18/iran-nuclear-infrastructure-location-of-enriched-uranium-stocks-uncertain"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "StockData": {
      "type": "object",
      "properties": {
        "change": {
          "type": "number",
          "format": "double",
          "x-go-name": "Change",
          "example": 1.3170000000000073
        },
        "change_percent": {
          "type": "number",
          "format": "double",
          "x-go-name": "ChangePercent",
          "example": 0.6731752197914574
        },
        "previous_day": {
          "type": "number",
          "format": "double",
          "x-go-name": "PreviousDay",
          "example": 195.64
        },
        "price": {
          "type": "number",
          "format": "double",
          "x-go-name": "LastPrice",
          "example": 196.957
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "StockSplitsData": {
      "type": "object",
      "properties": {
        "execution_date": {
          "type": "string",
          "x-go-name": "ExecutionDate",
          "example": "2022-08-25"
        },
        "split_from": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "SplitFrom",
          "example": 1
        },
        "split_to": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "SplitTo",
          "example": 3
        },
        "ticker": {
          "type": "string",
          "x-go-name": "Ticker",
          "example": "TSLA"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "SymbolOhlcvStats": {
      "type": "object",
      "title": "NewTopMarketStocksService creates a new instance of TopMarketStocksService.",
      "properties": {
        "change_pct": {
          "type": "number",
          "format": "double",
          "x-go-name": "ChangePct",
          "example": 1
        },
        "close_price": {
          "type": "number",
          "format": "double",
          "x-go-name": "ClosePrice",
          "example": 100
        },
        "open_price": {
          "type": "number",
          "format": "double",
          "x-go-name": "OpenPrice",
          "example": 100
        },
        "symbol": {
          "type": "string",
          "x-go-name": "Symbol",
          "example": "AAPL"
        },
        "total_volume": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "TotalVolume",
          "example": 1000000
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "TickerForecasts": {
      "description": "The map key is the ticker symbol, and the value is a slice of forecast items.",
      "type": "object",
      "title": "TickerForecasts represents forecast data for each ticker symbol.",
      "additionalProperties": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/PriceForecastItem"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "TickerInfo": {
      "type": "object",
      "properties": {
        "avgPrice": {
          "type": "number",
          "format": "double",
          "x-go-name": "AvgPrice"
        },
        "isIndex": {
          "type": "boolean",
          "x-go-name": "IsIndex"
        },
        "numShares": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "NumShares"
        },
        "ticker": {
          "type": "string",
          "x-go-name": "Ticker"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "TickerItem": {
      "type": "object",
      "properties": {
        "company_name": {
          "type": "string",
          "x-go-name": "CompanyName"
        },
        "ticker": {
          "type": "string",
          "x-go-name": "Ticker"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "TickerProfile": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean",
          "x-go-name": "Active",
          "example": true
        },
        "cik": {
          "type": "string",
          "x-go-name": "CIK",
          "example": "0000320193"
        },
        "currency": {
          "type": "string",
          "x-go-name": "Currency",
          "example": "usd"
        },
        "description": {
          "type": "string",
          "x-go-name": "Description",
          "example": "Apple is among the largest companies in the world, ...."
        },
        "future_earnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "FutureEarnings",
          "example": [
            "2026-04-29",
            "2026-01-28",
            "2025-10-29",
            "2025-08-07"
          ]
        },
        "locale": {
          "type": "string",
          "x-go-name": "Locale",
          "example": "us"
        },
        "market": {
          "type": "string",
          "x-go-name": "Market",
          "example": "stocks"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name",
          "example": "Apple Inc."
        },
        "related_tickers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "RelatedTickers",
          "example": [
            "MSFT",
            "GOOGL",
            "AMZN",
            "GOOG",
            "NVDA",
            "TSLA",
            "META",
            "NFLX",
            "DIS",
            "BRK.B"
          ]
        },
        "share_class_shares_outstanding": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "ShareClassSharesOutstanding",
          "example": 0
        },
        "ticker": {
          "type": "string",
          "x-go-name": "Ticker",
          "example": "AAPL"
        },
        "weighted_shares_outstanding": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "WeightedSharesOutstanding",
          "example": 14935826000
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "TradeData": {
      "description": "TradeData represents individual trade data from the sorted set",
      "type": "object",
      "properties": {
        "price": {
          "type": "number",
          "format": "double",
          "x-go-name": "Price",
          "example": 195.72
        },
        "timestamp": {
          "type": "string",
          "x-go-name": "Timestamp",
          "example": "2025-06-18 14:54:20"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "TradesDataResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Count",
          "example": 100
        },
        "symbol": {
          "type": "string",
          "x-go-name": "Symbol",
          "example": "AAPL"
        },
        "trades": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeData"
          },
          "x-go-name": "Trades"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "TreasuryRatesData": {
      "description": "TreasuryRatesData represents treasury rates for a single date",
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "x-go-name": "Date",
          "example": "2025-03-17"
        },
        "month1": {
          "type": "number",
          "format": "double",
          "x-go-name": "Month1",
          "example": 4.37
        },
        "month2": {
          "type": "number",
          "format": "double",
          "x-go-name": "Month2",
          "example": 4.33
        },
        "month3": {
          "type": "number",
          "format": "double",
          "x-go-name": "Month3",
          "example": 4.34
        },
        "month6": {
          "type": "number",
          "format": "double",
          "x-go-name": "Month6",
          "example": 4.29
        },
        "year1": {
          "type": "number",
          "format": "double",
          "x-go-name": "Year1",
          "example": 4.11
        },
        "year10": {
          "type": "number",
          "format": "double",
          "x-go-name": "Year10",
          "example": 4.31
        },
        "year2": {
          "type": "number",
          "format": "double",
          "x-go-name": "Year2",
          "example": 4.06
        },
        "year20": {
          "type": "number",
          "format": "double",
          "x-go-name": "Year20",
          "example": 4.64
        },
        "year3": {
          "type": "number",
          "format": "double",
          "x-go-name": "Year3",
          "example": 4.03
        },
        "year30": {
          "type": "number",
          "format": "double",
          "x-go-name": "Year30",
          "example": 4.6
        },
        "year5": {
          "type": "number",
          "format": "double",
          "x-go-name": "Year5",
          "example": 4.11
        },
        "year7": {
          "type": "number",
          "format": "double",
          "x-go-name": "Year7",
          "example": 4.21
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "VolumeCluster": {
      "type": "object",
      "properties": {
        "price": {
          "type": "number",
          "format": "double",
          "x-go-name": "Price",
          "example": 195.07
        },
        "volume": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "Volume",
          "example": 201
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "WatchlistData": {
      "type": "object",
      "properties": {
        "indexes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/WatchlistTickerData"
          },
          "x-go-name": "Indexes"
        },
        "performance": {
          "$ref": "#/definitions/PerformanceData"
        },
        "stocks": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/WatchlistTickerData"
          },
          "x-go-name": "Stocks"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    },
    "WatchlistTickerData": {
      "type": "object",
      "properties": {
        "average_cost": {
          "type": "number",
          "format": "double",
          "x-go-name": "AverageCost"
        },
        "current_day_info": {
          "$ref": "#/definitions/CurrentDayInfo"
        },
        "current_price": {
          "type": "number",
          "format": "double",
          "x-go-name": "CurrentPrice"
        },
        "days_change": {
          "type": "number",
          "format": "double",
          "x-go-name": "DaysChange"
        },
        "days_change_perc": {
          "type": "number",
          "format": "double",
          "x-go-name": "DaysChangePerc"
        },
        "extra_info": {
          "$ref": "#/definitions/ExtraInfo"
        },
        "full_name": {
          "type": "string",
          "x-go-name": "FullName"
        },
        "historical_data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DailyRowData"
          },
          "x-go-name": "HistoricalData"
        },
        "shares": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Shares"
        },
        "total_gain": {
          "type": "number",
          "format": "double",
          "x-go-name": "TotalGain"
        },
        "total_gain_perc": {
          "type": "number",
          "format": "double",
          "x-go-name": "TotalGainPerc"
        }
      },
      "x-go-package": "github.com/api-with-go/app/logic/models"
    }
  },
  "responses": {
    "APIKeyResponse": {
      "description": "",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/APIKey"
        }
      }
    },
    "ChatHistoryResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/ChatHistory"
      }
    },
    "CreateAPIKeyResponse": {
      "description": "CreateAPIKeyResponse represents the response structure when creating a new API key. It contains the generated API key value and the timestamp when it was created."
    },
    "CurrentPriceResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/CurrentPrice"
      }
    },
    "DailyDarkpoolTrendResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/DarkpoolMetrics"
      }
    },
    "DarkpoolDailySummaryResponse": {
      "description": "DarkpoolDailySummaryResponse represents the response for darkpool daily summary data",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/DarkpoolDailySummary"
        }
      }
    },
    "DarkpoolTradeResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/DarkpoolData"
      }
    },
    "DarkpoolTrendsResponse": {
      "description": "",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/DarkpoolTrend"
        }
      }
    },
    "DashboardWatchlistResponse": {
      "description": "",
      "schema": {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    },
    "DeleteAPIKeyResponse": {
      "description": "",
      "headers": {
        "message": {
          "type": "string",
          "description": "Success message"
        }
      }
    },
    "EarningsResponse": {
      "description": "",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/EarningsData"
        }
      }
    },
    "EntityHoldingsResponse": {
      "description": "",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/EntityHoldingResponse"
        }
      }
    },
    "ErrorResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    },
    "EstimatesResponse": {
      "description": "",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/CombinedOutput"
        }
      }
    },
    "ExpirationDatesResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/ExpirationDates"
      }
    },
    "FearGreedIndexResponse": {
      "description": "",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/FearGreedRecord"
        }
      }
    },
    "FibonacciCarmiliaResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/AnalysisResults"
      }
    },
    "FinancialsPeriodResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/FinancialsPeriodData"
      }
    },
    "FinancialsRangeResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/FinancialsRangeData"
      }
    },
    "FootprintResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Footprint"
      }
    },
    "FundHoldingsResponse": {
      "description": "",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/FundHoldingResponse"
        }
      }
    },
    "FuturesDataResponse": {
      "description": "",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/FuturesRowData"
        }
      }
    },
    "G7EventsResponse": {
      "description": "",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/G7EventsData"
        }
      }
    },
    "HistoricalDataResponse": {
      "description": "",
      "schema": {}
    },
    "HistoricalOptionsResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/HistoricalOptionsData"
      }
    },
    "IPOsResponse": {
      "description": "",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/IPOData"
        }
      }
    },
    "InvestorSearchResponse": {
      "description": "",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/HolderInfo"
        }
      }
    },
    "MarketSnapshotResponse": {
      "description": "",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/MarketSnapshotItem"
        }
      }
    },
    "MarketStatusResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/MarketStatus"
      }
    },
    "MetricsResponse": {
      "description": "",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "description": "The response data",
            "x-go-name": "Data"
          },
          "success": {
            "description": "Indicates if the request was successful",
            "type": "boolean",
            "x-go-name": "Success"
          }
        }
      }
    },
    "NewsResponse": {
      "description": "",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/SkeletonNewsArticle"
        }
      }
    },
    "OptionsChainResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/OptionsChain"
      }
    },
    "OptionsFilterRangesResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/OptionsFilterRanges"
      }
    },
    "PriceForecastResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/TickerForecasts"
      }
    },
    "RiskAnalysisScoreResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/RiskAnalysisScores"
      }
    },
    "ScreenResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/ScreenResponse"
      }
    },
    "SearchResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/SearchResponse"
      }
    },
    "StockSplitsResponse": {
      "description": "",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/StockSplitsData"
        }
      }
    },
    "TickerProfileResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/TickerProfile"
      }
    },
    "TickerSentimentResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/MultiPeriodSentimentMetrics"
      }
    },
    "TickersListResponse": {
      "description": "",
      "schema": {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    },
    "TickersListWithNamesResponse": {
      "description": "",
      "schema": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      }
    },
    "TickertapeResponse": {
      "description": "",
      "schema": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/definitions/StockData"
        }
      }
    },
    "TopMarketStocksResponse": {
      "description": "",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/SymbolOhlcvStats"
        }
      }
    },
    "TradesDataResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/TradesDataResponse"
      }
    },
    "TreasuryRatesResponse": {
      "description": "",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/TreasuryRatesData"
        }
      }
    },
    "WatchlistDataResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/WatchlistData"
      }
    },
    "WatchlistPredictionsResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/TickerForecasts"
      }
    }
  }
}